---
type: update
version: 1.5.2
name: Unomi - Upgrade
logo: ../../assets/common/jahia-logo-70x70.png
id: unomi-upgrade
description:
  short: Unomi - Upgrade

mixins:
  - ../../mixins/common.yml
  - ../../mixins/jcustomer.yml


onInstall:
  - setGlobals:
      currentVersion: ${nodes.cp.first.customitem.nodeVersion}

  # Check if target version is consistent (higher than current version)
  - isVersionStrictlyHigher:
      a: "${settings.targetVersion}"
      b: "${globals.currentVersion}"
      res: targetVersionIsConsistent
  - if (!${globals.targetVersionIsConsistent}):
      - return:
          type: error
          message: "Target version must be higher than current version (v${globals.currentVersion})."

  # Mute monitors
  - muteEnvWideMonitors

  # If a Docker tag suffix is passed we need to append it to the jCustomer version
  - if ('${settings.jCustomerDockerTagSuffix.print()}' == ''):
      - setGlobals:
          targetDockerTag: ${settings.targetVersion}
  - else:
      - setGlobals:
          targetDockerTag: ${settings.targetVersion}_${settings.jCustomerDockerTagSuffix}

  # Preparing the data migration that will happen during jCustomer startup
  - env.control.AddContainerEnvVars[cp]:
    vars:
      UNOMI_MIGRATION_RECOVER_FROM_HISTORY: true
  - cmd[${nodes.cp.first.id}]: |-
      setenv=$(find /opt/jcustomer/jcustomer/bin -name setenv)
      tmpenv=/opt/jcustomer/jcustomer-${settings.targetVersion}/bin/setenv
      mkdir -p /opt/jcustomer/jcustomer-${settings.targetVersion}/bin && cp $setenv $tmpenv
      sed -i 's/KARAF_OPTS="-Dunomi.autoStart=true"/KARAF_OPTS="-Dunomi.autoMigrate=${globals.currentVersion} -Dunomi.autoStart=true"/' $tmpenv
      echo $tmpenv >> /etc/jelastic/redeploy.conf

  - cmd[cp]: |-
      migrationdir="/opt/jcustomer/jcustomer/data/migration"
      newmigrationdir="/opt/jcustomer/jcustomer-${settings.targetVersion}/data/migration"
      if [ -d $migrationdir ]; then
        mkdir -p $newmigrationdir && cp -R $migrationdir/* $newmigrationdir/ && chown -R karaf:karaf $newmigrationdir
        sed -i 's|jcustomer/jcustomer/data|jcustomer/jcustomer-${settings.targetVersion}/data|g' /etc/jelastic/redeploy.conf
      fi
      service datadog-agent stop
      service karaf stop

  - env.control.AddContainerEnvVars[*]:
    vars: {"UNOMI_VERSION": "${settings.targetVersion}"}
  - environment.nodegroup.ApplyData[cp]:
      data:
        productVersion: ${settings.targetVersion}

  - upgradeJcustomerOnNode: ${nodes.cp.first.id}
  - sleep: 20000
  # If the Unomi migrations failed, the node won't start (and we shouldn't move forward with the upgrade)
  # so we have to check the node again to make sure that it is running (since the healthcheck done during the
  # onAfterRedeployContainer event won't make the upgrade package fail)
  - checkJcustomerHealthWhenStarting: ${nodes.cp.first.id}

  # Remove modifications done for data migration
  - env.control.RemoveContainerEnvVars[cp]:
    vars: ["UNOMI_MIGRATION_RECOVER_FROM_HISTORY"]
  - cmd[${nodes.cp.first.id}]: |-
      setenv=$(find /opt/jcustomer/jcustomer/bin -name setenv)
      sed -i 's/export KARAF_OPTS="-Dunomi.autoMigrate=${globals.currentVersion} -Dunomi.autoStart=true"/KARAF_OPTS="-Dunomi.autoStart=true"/' $setenv
      sed -i '/setenv/d' /etc/jelastic/redeploy.conf

  - forEach(nodes.cp):
      if ("${@i.id}" != "${nodes.cp.first.id}"):
        upgradeJcustomerOnNode: ${@i.id}

  - cmd[cp]: |-
      sed -i 's|jcustomer/jcustomer-${settings.targetVersion}/data|jcustomer/jcustomer/data|g' /etc/jelastic/redeploy.conf

  - updateProductVersionInPapi:
      version: "${settings.targetVersion}"
      product: "unomi"

  # Unmute monitors
  - unmuteEnvWideMonitors


actions:
  upgradeJcustomerOnNode:
    api: environment.control.RedeployContainerById
    nodeId: ${this}
    tag: ${globals.targetDockerTag}
    useExistingVolumes: true
    skipReinstall: false
    isSequential: false
    envName: ${env.envName}


settings:
  fields:
    - name: targetVersion
      type: string
      caption: Target Version
      vtype: text
      required: true
    - name: jCustomerDockerTagSuffix
      type: string
      caption: jCustomer Docker tag suffix
