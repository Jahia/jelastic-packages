---
type: update
version: 1.5.2
name: Migrate jCustomer env to v23
id: migrate-jcustomer-env-v23

# Required for healthchecks
mixins:
  - "../../../mixins/common.yml"
  - "../../../mixins/jcustomer.yml"
  - "../../../mixins/elasticsearch.yml"
  - "../../../mixins/haproxy.yml"

globals:
  version: 23
  jCustomerRollingRestartNeeded: false
  jCustomerRollingRedeployNeeded: false

onInstall:
  ### Pre-migration actions
  - checkEnvVersion: ${globals.version}
  - if(!${settings.disable_checks}):
      - preChecks
  - else:
      log: "pre migration checks are disabled"
  - eventsUpdate
  - setGlobalRepoRootUrl
  ### End pre-migration actions

  - preventJavaAutoRestart          # PAAS-2393
  - addHaproxyNodes                 # PAAS-2333

  # Actions that require a restart:

  - if ("${globals.jCustomerRollingRestartNeeded}" == "true"):
      install:
        jps: "${globals.repoRootUrl}/packages/jcustomer/jcustomer-rolling-restart.yml"

  ### Post-migration actions
  - setEnvVersion: ${globals.version}
  - if(!${settings.disable_checks}):
      - postChecks
  - else:
      log: "post migration checks are disabled"
  - logEvent:
      target: ${nodes.cp.first.id}
      title: "Environment $envName migrated"
      text: "Environment $envName migrated to v${globals.version}"
  ### End post-migration actions

actions:
  eventsUpdate:
    install:
      jps: "${baseUrl}/../update-events.yml"

  preChecks:
    - checkJcustomerHealth: cp
    - checkJcustomerDatadogCustomChecks: cp

  postChecks:
    - checkJcustomerHealth: cp
    - checkJcustomerDatadogCustomChecks: cp

  preventJavaAutoRestart:
    - cmd[cp]: |-
        filename=karaf_override.lib
        path=/var/lib/jelastic/customizations
        if [ ! -r  $path/$filename ]; then
          curl --create-dirs -fLSso $path/$filename ${globals.repoRootUrl}/packages/jcustomer/migrations/v23_assets/$filename || exit 1
        fi

        conf=/etc/systemd/system/karaf.service
        new_line="ExecStartPre=/bin/bash -c \"free -m | awk 'NR==2 {print \$2}' > /opt/jcustomer/jcustomer/mem_on_karaf_start\""
        if ! grep -q "mem_on_karaf_start" $conf; then
          sed -i "/CAP_NET_BIND_SERVICE/a $new_line" $conf
          systemctl daemon-reload
        fi

  addHaproxyNodes:
  - cmd [${nodes.cp.first.id}]: echo $DATADOGAPIKEY
  - setGlobals:
      datadogApiKey: ${response.out}
  - addNodes:
    - displayName: Haproxy
      nodeGroup: bl
      nodeType: haproxy
      tag: 2.6.1
      cloudlets: 8
    - displayName: Haproxy
      nodeGroup: bl
      nodeType: haproxy
      tag: 2.6.1
      cloudlets: 8
  - env.control.SetNodeGroupDisplayName [bl]:
      displayName: Haproxy
  - env.control.AddContainerEnvVars [bl]:
      vars:
        DATADOGAPIKEY: ${globals.datadogApiKey}
        _PROVIDE: haproxy
        _ROLE: reverse_proxy
        envName: ${env.shortdomain}
        envmode: development
        haproxy_cfg_timeout_server: 5m
  - env.control.AddContainerVolumes [bl]:
      volumes: /etc/haproxy
  - script: |
      return jelastic.environment.security.AddRule(
        '${env.envName}',
        session,
        {
          "action": "ALLOW",
          "direction": "INPUT",
          "isEnabled": true,
          "name": "SSL for jCustomer",
          "ports": 9443,
          "priority": 1040,
          "protocol": "ALL",
          "src": "ALL"
        },
        "bl"
      )
  - setJelasticUserAsRoot: bl
  - installRequiredPackages:
      target: bl
      packages: "jq rclone"
  - installPython:
      target: bl
      python_major_version: 3
      python_minor_version: 8
  - setJournaldLimit
  - getLogEventScript: "cp, bl"
  - installPapiScript: "cp, bl"
  - addJCustomerCredentialsToHaproxy
  - installHaproxy
  - setupDatadogAgentHaproxy: bl

settings:
  fields:
    - type: toggle
      name: disable_checks
      caption: disable all checks
