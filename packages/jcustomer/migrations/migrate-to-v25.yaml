---
type: update
version: 1.5.2
name: Migrate jCustomer env to v25
id: migrate-jcustomer-env-v25

# Required for healthchecks
mixins:
  - "../../../mixins/common.yml"
  - "../../../mixins/jcustomer.yml"
  - "../../../mixins/elasticsearch.yml"

globals:
  version: 25
  jCustomerRollingRestartNeeded: false
  jCustomerRollingRedeployNeeded: false

onInstall:
  ### Pre-migration actions
  - checkEnvVersion: ${globals.version}
  - if(!${settings.disable_checks}):
      - preChecks
  - else:
      log: "pre migration checks are disabled"
  - eventsUpdate
  - setGlobalRepoRootUrl
  ### End pre-migration actions

  # Actions that require a restart
  - fixRedeployAndRcloneConfig       # PAAS-2633

  # Actions that require a redeploy
  # (None)

  - if ("${globals.jCustomerRollingRestartNeeded}" == "true"):
      install:
        jps: "${globals.repoRootUrl}/packages/jcustomer/jcustomer-rolling-restart.yml"

  ### Post-migration actions
  - setEnvVersion: ${globals.version}
  - if(!${settings.disable_checks}):
      - postChecks
  - else:
      log: "post migration checks are disabled"
  - logEvent:
      target: ${nodes.cp.first.id}
      title: "Environment $envName migrated"
      text: "Environment $envName migrated to v${globals.version}"
  ### End post-migration actions

actions:
  eventsUpdate:
    install:
      jps: "${baseUrl}/../update-events.yml"

  preChecks:
    - checkJcustomerHealth: cp
    - checkJcustomerDatadogCustomChecks: cp

  postChecks:
    - checkJcustomerHealth: cp
    - checkJcustomerDatadogCustomChecks: cp

  fixRedeployAndRcloneConfig:
    - fixRedeployConfig
    - cmd[${nodes.cp.first.id}]: |-
        if [ -z "$(grep LOGS_REGION_PLACEHOLDER /root/.config/rclone/rclone.conf)" ]; then
          echo "rclone_conf_ok"
        fi
    - if ("${response.out}" == "rclone_conf_ok"):
        - log: "rclone conf ok, nothing to do"
    - else:
        - fixRcloneConfig

  fixRedeployConfig:
    - cmd[cp]: |-
        redeploy_conf_path="/etc/jelastic/redeploy.conf"
        if [ -f $redeploy_conf_path ]; then
          rm -f $redeploy_conf_path
        fi
        echo "$redeploy_conf_path" >> $redeploy_conf_path
        echo "/root/.config/rclone/rclone.conf" >> $redeploy_conf_path

  fixRcloneConfig:
    - fetchS3LogsBucketInfos
    - cmd[cp]: |-
        rclone_conf=/root/.config/rclone/rclone.conf
        provider="${globals.logs_bucket_provider}"
        region="${globals.s3_bucket_region}"
        __secret__access_key="${globals.__secret__access_key}"
        __secret__secret_key="${globals.__secret__secret_key}"
        __secret__aes256_key="${globals.__secret__aes256_key.print()}"

        set -e
        sed -e "s/LOGS_REGION_PLACEHOLDER/$region/" \
            -e "s/LOGS_ACCESS_KEY_PLACEHOLDER/$__secret__access_key/" \
            -e "s#LOGS_SECRET_KEY_PLACEHOLDER#$__secret__secret_key#" \
            -i $rclone_conf

        if [ "$provider" = "ovh" ]; then
          provider="Other"
          endpoint="https://s3.$region.io.cloud.ovh.net/"
          sed -e "s;LOGS_ENDPOINT_PLACEHOLDER;$endpoint;" \
              -e "s#LOGS_AES256_KEY_PLACEHOLDER#$__secret__aes256_key#" \
              -e "/#PROVIDER_AWS/d" \
              -e "s/ #PROVIDER_OVH//" \
              -i $rclone_conf
        else
          provider=AWS
          sed -e "s/ #PROVIDER_AWS//" \
              -e "/#PROVIDER_OVH/d" \
              -i $rclone_conf
        fi
        sed -i "s/LOGS_PROVIDER_PLACEHOLDER/$provider/" $rclone_conf

settings:
  fields:
    - type: toggle
      name: disable_checks
      caption: disable all checks
