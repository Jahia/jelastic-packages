---
type: update
version: 1.5
name: Jahia - List backup in bucket
logo: ../../assets/common/jahia-logo-70x70.png
id: jahia-list-from-bucket

globals:
  logAction: "List"

mixins:
  - mixins/common.yml

onInstall:
  - if (nodes.proc):  # Jahia
      - installBackupTools:
          target: proc
          logAction: ${globals.logAction}
      - getBackupList: proc
  - else:  # Jcustomer
      - installBackupTools:
          target: ${nodes.es.first.id}
          logAction: ${globals.logAction}
      - getBackupList: ${nodes.es.first.id}

actions:
  getBackupList:
    - cmd [${this}]:
        - export AWS_ACCESS_KEY_ID="${settings.aws_access_key}" AWS_SECRET_ACCESS_KEY="${settings.aws_secret_key}"
        - provider=$(awk -F'=' '$1=="JEL_CLOUDPROVIDER" {print $2}' /metadata_from_HOST); if [ "$provider" != "aws" ]; then aws_region='eu-west-1'; else aws_region=$(awk -F'=' '$1=="JEL_REGION" {print $2}' /metadata_from_HOST); fi; export AWS_DEFAULT_REGION="$aws_region"
        - cluster_role=$(awk -F'=' '$1=="JEL_ENV_ROLE" {print $2}' /metadata_from_HOST); export cluster_role
        - env_region=$(awk -F'=' '$1=="JEL_REGION" {print $2}' /metadata_from_HOST | sed 's/[[:punct:]]//g'); export env_region
        - cd jelastic_backup
        - python3 backrest.py -a list --bucketname jc${cluster_role}${env.uid}${env_region}
    - setGlobals:
        cmdOutput: ${response.out}

success: ${globals.cmdOutput}

settings:
  fields:
    - name: aws_access_key
      type: string
      caption: AWS Access Key
      vtype: text
      required: true
    - name: aws_secret_key
      type: string
      caption: AWS Secret Key
      vtype: text
      required: true
    - name: env
      type: string
      required: true
      default: prod
