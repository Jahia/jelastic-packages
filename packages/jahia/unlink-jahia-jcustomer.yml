---
type: update
version: 1.5.2
name: Jahia - Remove jExperience config
logo: ../../assets/common/jahia-logo-70x70.png
id: unlink-jahia-jcustomer
description:
  short: Jahia - Remove jExperience config

mixins:
  - ../../mixins/common.yml
  - ../../mixins/jcustomer.yml
  - ../../mixins/jahia.yml

onInstall:
  - if ("${settings.jCustomerEnv.print()}" == ""):
    - getJcustomer
  - else:
    - setGlobals:
        jCustomerEnv: ${settings.jCustomerEnv}
  - getJahiaVersion
  - isVersionHigherOrEqual:
      a: ${globals.jahiaVersion}
      b: 8.0.0.0
      res: jahia8
  - if (${globals.jahia8}):
    - removeKibanaAndJexperienceDashboards
    - removeKibanaDashboardAccountsAndSpace:
        jCustomerEnv: ${globals.jCustomerEnv}
  - removeAndCleanJexperience
  - updateEnvLinkJahia
  - if (! ${settings.isUnomiEnvDeletion}):
    - updateEnvLinkJcustomer
    - refreshUnomiAllowedIPs:
        unomiEnvName: ${globals.jCustomerEnv}

actions:
  getJcustomer:
    - script: |
        const envName = "${env.envName}";
        jCustomerLinked = jelastic.env.control.GetNodeGroups(envName, session).object.filter(function (object) {
                                        return object.name == "proc";}).pop().envLink;
        if (! jCustomerLinked) {
          return {"result": 1, "errOut": "No jCustomer is linked with the Jahia env"}
        } else {
          return {"result": 0, "out": jCustomerLinked}
        }
    - setGlobals:
        jCustomerEnv: ${response.out}

  updateEnvLinkJahia:
    - environment.nodegroup.ApplyData [proc, cp]:
        data:
          envLink: null

  updateEnvLinkJcustomer:
    - script: |
        const jahiaEnv = "${env.envName}";
        const jCustomerEnv = "${globals.jCustomerEnv}";
        envsLinked = jelastic.env.control.GetNodeGroups(jCustomerEnv, session).object.filter(function (object) {
                                return object.name == "cp";
                              }).pop().envLink;
        if (envsLinked.indexOf(jahiaEnv) == -1) {
          return {"result": 1, "out": jahiaEnv + " not in envLink of " + jCustomerEnv};
        }

        if (envsLinked.indexOf(",") != -1) {
          envsLinkedArr = envsLinked.split(",");
          envsLinkedArr.splice(envsLinkedArr.indexOf(jahiaEnv), 1);
          newEnvLink = String(envsLinkedArr);
        } else {
          newEnvLink = null;
        }
        resp = jelastic.env.nodegroup.ApplyData(jCustomerEnv, session, nodeGroup='cp', data={'envLink': newEnvLink});
        return {"result": 0, "out": jahiaEnv + " removed from envLink of " + jCustomerEnv};

settings:
  fields:
    - name: isUnomiEnvDeletion
      type: toggle
      caption: Is the jCustomer env being deleted? (OPTIONAL, default value is false)
      required: false
      value: false
    - name: jCustomerEnv
      type: envlist
      caption: Linked jCustomer env (OPTIONAL, if not set then the envname will be retrieved)
      required: false
      valueField: shortdomain
