---
type: update
version: 1.5.2
name: Migrate Jahia env to v39
id: migrate-jahia-env-v39

# Required for healthchecks
mixins:
  - "../../../mixins/common.yml"
  - "../../../mixins/jahia.yml"
  - "../../../mixins/mariadb.yml"
  - "../../../mixins/haproxy.yml"
  - "../../../mixins/elasticsearch.yml"

globals:
  version: 39
  ignoredModules: ""

onInstall:
  ### Pre-migration actions
  - checkEnvProvides: jahia
  - checkEnvVersion: ${globals.version}
  - if(!${settings.disable_checks}):
      - preChecks
  - else:
      log: "pre migration checks are disabled"
  - eventsUpdate
  - setGlobalRepoRootUrl
  ### End pre-migration actions

  # Actions that update modules (needs to be done first)
  # (None)

  # Regular actions
  - fixAugSearchLanguageCount                        # PAAS-2834

  # Actions that require a restart
  - forceConsoleLogsToUTC                            # PAAS-2821

  # Actions that require a redeploy
  # (None)

  # Redeploy and restart actions:
  - if ("${globals.jahiaRollingRedeployNeeded}" == "true"):
      - install:
          jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-redeploy.yml"
  - else:
      - if ("${globals.jahiaRollingRestartNeeded}" == "true"):
          - install:
              jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-restart.yml"

  # Actions that can only run when the redeploy is done
  # (None)

  ### Post-migration actions
  - setEnvVersion: ${globals.version}
  - if(!${settings.disable_checks}):
      - postChecks
  - else:
      log: "post migration checks are disabled"
  - logEvent:
      target: ${nodes.proc.first.id}
      title: "Environment $envName migrated"
      text: "Environment $envName migrated to v${globals.version}"
  ### End post-migration actions

actions:
  eventsUpdate:
    install:
      jps: "${baseUrl}../update-events.yml"

  preChecks:
    - checkJahiaHealth: "cp, proc"
    - checkJahiaDatadogCustomChecks: "cp, proc"
    - checkHaproxyHealth: bl
    - checkHaproxyDatadogCustomChecks: bl
    - checkMariadbHealth:
        target: sqldb
    - checkGaleraClusterHealth: sqldb
    - checkMariadbDatadogCustomChecks: sqldb
    - dumpModules:
        operation: migration
        checkVersion: true

  postChecks:
    - checkJahiaHealth: "cp, proc"
    - checkJahiaDatadogCustomChecks: "cp, proc"
    - checkHaproxyHealth: bl
    - checkHaproxyDatadogCustomChecks: bl
    - checkMariadbHealth:
        target: sqldb
    - checkGaleraClusterHealth: sqldb
    - checkMariadbDatadogCustomChecks: sqldb
    - checkModulesAfterOperation:
        operation: migration
        ignoredModules: ${globals.ignoredModules}
        checkVersion: true

  fixAugSearchLanguageCount:
    - cmd[proc, cp]: |-
        f=/etc/datadog-agent/checks.d/augmented_search.py
        if ! (sed -n 198p $f | grep -q __as_); then
          sed '198s,indices,indices/*__as_*,' -i $f
          systemctl restart datadog-agent
        fi

  forceConsoleLogsToUTC:
    # In case the timezone is already defined, use it
    - cmd[proc]: |-
        conf=/opt/tomcat/conf/variables.conf
        timezone=$(grep -o 'user\.timezone=[^ ]*' $conf | awk -F '=' '{print $2}')
        echo $timezone
    - if ("${response.out}" != ""):
      - env.control.AddContainerEnvVars[cp, proc]:
              vars: {"jahia_cfg_timezone": "${response.out}"}
      - cmd[cp, proc]: |-
          sed -i '/user\.timezone/d' /opt/tomcat/conf/variables.conf
    - cmd[proc, cp]: |-
        log4j_conf=/opt/tomcat/webapps/ROOT/WEB-INF/etc/config/log4j2.xml
        tomcat_env=/opt/tomcat/conf/tomcat-env.sh
        if ! grep -qE "^\s*JAVA_OPTS\s*=.*user.timezone" $tomcat_env; then
          sed -i 's;^\s*\(JAVA_OPTS\s*=.*\)"$;\1 -Duser.timezone=${jahia_cfg_timezone:-UTC}";' $tomcat_env
          sed -i 's|%d: %-5p \[%c{1}\] - %encode{%.-2000m}{CRLF}%n%sxThrowable|%d{yyyy-MM-dd HH:mm:ss,SSS}{UTC}: %-5p [%c{1}] - %encode{%.-2000m}{CRLF}%n%sxThrowable|' $log4j_conf
          echo restart
        fi
    - if ("${response.out}" != ""):
        setGlobals:
          jahiaRollingRestartNeeded: true

settings:
  fields:
    - type: toggle
      name: disable_checks
      caption: disable all checks
