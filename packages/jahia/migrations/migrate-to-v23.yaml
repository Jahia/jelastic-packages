---
type: update
version: 1.5.2
name: Migrate Jahia env to v23
id: migrate-jahia-env-v23

# Required for healthchecks
mixins:
  - "../../../mixins/common.yml"
  - "../../../mixins/jahia.yml"
  - "../../../mixins/mariadb.yml"
  - "../../../mixins/haproxy.yml"
  - "../../../mixins/jcustomer.yml"
  - "../../../mixins/elasticsearch.yml"

globals:
  version: 23

onInstall:
  ### Pre-checks
  - checkEnvVersion: ${globals.version}
  - checkJahiaHealth: "cp, proc"
  - checkJahiaDatadogCustomChecks: "cp, proc"
  - checkHaproxyHealth: bl
  - checkHaproxyDatadogCustomChecks: bl
  - checkMariadbHealth:
      target: sqldb
  - checkGaleraClusterHealth: sqldb
  - checkMariadbDatadogCustomChecks: sqldb
  - eventsUpdate
  - setGlobalRepoRootUrl
  ### End Pre-checks

  - upgradeAugmentedSearch              # PAAS-2302
  - updateDatadogAgent                  # PAAS-2270
  - updateASConfig                      # PAAS-2264
  - removeDistribution                  # PAAS-2285
  - updateIPSecScript                   # PAAS-2293
  - removeAzurePythonPackages           # PAAS-2293
  - updateSAMWhitelist                  # PAAS-2312
  - updateHaproxyConf                   # PAAS-2309

  # Actions that require a restart

  # Restart action:
  - if ("${globals.jahiaRollingRestartNeeded}" == "true"):
      - install:
          jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-restart.yml"

  ### Post-actions
  - setEnvVersion: ${globals.version}
  - logEvent:
      target: ${nodes.proc.first.id}
      title: "Environment $envName migrated"
      text: "Environment $envName migrated to v${globals.version}"
  - checkJahiaHealth: "cp, proc"
  - checkJahiaDatadogCustomChecks: "cp, proc"
  - checkHaproxyHealth: bl
  - checkHaproxyDatadogCustomChecks: bl
  - checkMariadbHealth:
      target: sqldb
  - checkGaleraClusterHealth: sqldb
  - checkMariadbDatadogCustomChecks: sqldb
  ### End Post-actions

actions:
  eventsUpdate:
    install:
      jps: "${baseUrl}../update-events.yml"

  updateDatadogAgent:
    - cmd [cp, proc]: |-
        check_filename=strongswan_connections_status.py
        check_file=/etc/datadog-agent/checks.d/$check_filename
        if ! (echo 88972f3df25145006bf5b05c5eb63cc8 $check_file | md5sum --status -c); then
          curl -fLSso $check_file ${globals.repoRootUrl}/packages/jahia/migrations/v23_assets/$check_file || exit 1
          chown dd-agent: $check_file
        fi
        pip install gnureadline
      user: root
    - cmd[sqldb]: |-
        check_galera_wsrep_file=/etc/datadog-agent/checks.d/check_galera_wsrep_ready_status.py
        if ! (echo 2f116ff16890a9e9bb73109f2ec05e96 $check_galera_wsrep_file | md5sum --status -c); then
          curl -fLSso $check_galera_wsrep_file ${globals.repoRootUrl}/assets/database/check_galera_wsrep_ready_status.py || exit 1
          chown dd-agent: $check_galera_wsrep_file
        fi
        sed -e 's/user:/username:/' \
            -e 's/pass:/password:/' \
            -i /etc/datadog-agent/conf.d/mysql.d/conf.yaml
      user: root
    - cmd[bl]: |-
        haproxy_remaining_browsing_check_file=/etc/datadog-agent/checks.d/haproxy_one_remaining_browsing.py
        if ! (echo 90f697fbbd4a7e937cd01022c156a4e7 $haproxy_remaining_browsing_check_file | md5sum --status -c); then
          curl -fLSso $haproxy_remaining_browsing_check_file ${globals.repoRootUrl}/assets/haproxy/haproxy_one_remaining_browsing.py || exit 1
          chown dd-agent: $haproxy_remaining_browsing_check_file
        fi
        conf_file=/etc/datadog-agent/conf.d/haproxy.d/conf.yaml
        if (! grep -q "disable_legacy_service_tag: true" $conf_file); then
          sed '$a\    disable_legacy_service_tag: true' -i $conf_file
        fi
      user: root
    - installLatestDatadogAgent: "*"
    - cmd[*]: |-
        rpm -q gpg-pubkey-4172a230-55dd14f6 || true
      user: root

  updateASConfig:
    - cmd[proc]: |-
        augsearch_cfg="/data/digital-factory-data/karaf/etc/org.jahia.modules.augmentedsearch.cfg"
        if [ -f $augsearch_cfg ]; then
          sed -r \
            -e 's/^(org.jahia.modules.augmentedsearch.minHeapPerShardInMb\s*=\s*).*/\110/' \
            -i $augsearch_cfg
        fi

  upgradeAugmentedSearch:
    - isAugSearchEnabled
    - if (${globals.isAugSearchEnabled}):
        - getJahiaVersion
        - isVersionHigherOrEqual:
            a: ${globals.jahiaVersion}
            b: 8.0.0.0
            res: jahia8
        - if (${globals.jahia8}):
            installOrUpgradeModule:
              moduleSymname: augmented-search
              moduleVersion: 3.4.2
              moduleGroupId: org.jahia.modules
              moduleRepository: augmented-search-releases
              startModule: true

  removeDistribution:
    - environment.nodegroup.ApplyData [*]:
        data:
          distribution: null

  updateIPSecScript:
    - cmd[cp, proc]: |-
        target=/usr/local/bin/ipsec_updown.sh
        curl -fLSso $target ${baseUrl}/v23_assets/ipsec_updown.sh || exit 1
        chmod 755 $target
      user: root

  removeAzurePythonPackages:
    - cmd[cp, proc]: pip list | awk '$1~/^(adal|azure)/ {print $1}' | xargs pip uninstall -y || true
      user: root

  updateSAMWhitelist:
    - cmd [cp, proc]: |-
        sam_conf_file=$DATA_PATH/digital-factory-data/karaf/etc/org.jahia.modules.sam.healthcheck.ProbesRegistry.cfg
        if ! grep -q "probes.ModuleState.whitelist" $sam_conf_file; then
          modules=(
            distributed-sessions
            personal-api-tokens
            server-availability-manager
            graphql-dxm-provider
            org.jahia.bundles.clustering
            jexperience
            jexperience-dashboards
            kibana-dashboards-provider
            augmented-search
            database-connector
            elasticsearch-connector
          )
          echo "probes.ModuleState.whitelist=$(echo ${modules[@]} | tr " " ",")" >> $sam_conf_file
        fi

  updateHaproxyConf:
    - cmd[bl]: |-
        HAPROXY_DIR=/etc/haproxy
        HAPROXY_CONF_DIR=$HAPROXY_DIR/haproxy.cfg.jahia
        HAPROXY_JAHIA_CONF=$HAPROXY_CONF_DIR/jahia-cloud.cfg
        if ( ! grep -q "$HAPROXY_DIR/robots_noindex.txt" $HAPROXY_JAHIA_CONF ); then
          sed '/errorfiles/i \
            acl is_robots_txt path_end /robots.txt \
            acl is_host_technical_domain hdr_reg(Host) ^.*\.(j|cloud)\.jahia.com$ \
            acl is_x-forwarded-host_set hdr(X-Forwarded-Host) -m found \
            acl is_x-forwarded-host_technical_domain hdr_reg(X-Forwarded-Host) ^.*\.(j|cloud)\.jahia.com$ if is_x-forwarded-host_set \
            http-request return status 200 content-type "text/plain" file "/etc/haproxy/robots_noindex.txt" hdr "cache-control" "no-cache" if is_robots_txt  is_host_technical_domain !is_x-forwarded-host_set || is_robots_txt is_host_technical_domain is_x-forwarded-host_technical_domain \
            ' -i $HAPROXY_JAHIA_CONF
          curl -fLSso $HAPROXY_DIR/robots_noindex.txt ${globals.repoRootUrl}/assets/haproxy/robots_noindex.txt || exit 1
          sudo systemctl reload haproxy
        fi
