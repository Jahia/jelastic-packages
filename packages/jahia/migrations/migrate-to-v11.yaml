---
type: update
version: 1.5.2
name: Migrate Jahia env to v11
id: migrate-jahia-env-v11

# Required for healthchecks
mixins:
  - "../../../mixins/common.yml"
  - "../../../mixins/jahia.yml"
  - "../../../mixins/mariadb.yml"
  - "../../../mixins/haproxy.yml"
  - "../../../mixins/jcustomer.yml"

globals:
  version: 11

onInstall:
  ### Pre-checks
  - checkEnvVersion: ${globals.version}
  - checkJahiaHealth: "cp, proc"
  - checkJahiaDatadogCustomChecks: "cp, proc"
  - checkHaproxyHealth: bl
  - checkHaproxyDatadogCustomChecks: bl
  - checkMariadbHealth:
      target: sqldb
  - checkGaleraClusterHealth: sqldb
  - checkMariadbDatadogCustomChecks: sqldb
  - eventsUpdate
  - setGlobalRepoRootUrl
  ### End Pre-checks

  - removeEmptyEnvLink           # PAAS-1740
  - updateJexperience            # PAAS-1887
  - fixDDHaproxyIntegrationConf  # PAAS-1901

  ### Post-actions
  - setEnvVersion: ${globals.version}
  - logEvent:
      target: ${nodes.proc.first.id}
      title: "Environment $envName migrated"
      text: "Environment $envName migrated to v${globals.version}"
  - checkJahiaHealth: "cp, proc"
  - checkJahiaDatadogCustomChecks: "cp, proc"
  - checkHaproxyHealth: bl
  - checkHaproxyDatadogCustomChecks: bl
  - checkMariadbHealth: sqldb
  - checkGaleraClusterHealth: sqldb
  - checkMariadbDatadogCustomChecks: sqldb
  ### End Post-actions

actions:
  eventsUpdate:
    install:
      jps: "${baseUrl}../update-events.yml"

  removeEmptyEnvLink:
    script: |-
      envLink = jelastic.env.control.GetNodeGroups("${env.envName}", session).object.filter(function (object) {
                                return object.name == "cp";
                              }).pop().envLink;
      if (envLink === "") {
        jelastic.env.nodegroup.ApplyData("${env.envName}", session,
          nodeGroup="cp",
          data={'envLink': null}
        );
        jelastic.env.nodegroup.ApplyData("${env.envName}", session,
          nodeGroup="proc",
          data={'envLink': null}
        );
        return {"result": 0, "envLinkFixed": true}
      } else {
        return {"result": 0, "envLinkFixed": false}
      }

  updateJexperience:
    # Update jExperience to 1.11.7 on Jahia 7.3 envs
    - getJahiaVersion
    - isVersionStrictlyLower:
        a: ${globals.jahiaVersion}
        b: 8.0.0.0
        res: isLowerThan8000
    - if( ${globals.isLowerThan8000} ):
        - upgradeJahiaModule:
            module: "jExperience"
            version: 1.11.7

  fixDDHaproxyIntegrationConf:
    - cmd[bl]: |-
        wantedMD5="54c8456e10c3aab23b1da120c9ef422d"
        fileName="/etc/datadog-agent/conf.d/haproxy.d/conf.yaml"
        fileMD5=$(grep -Ev "(password|service):" $fileName | md5sum | awk '{print $1}')
        if [ "$fileMD5" != "$wantedMD5" ]; then
          admPwd=$(awk -F':' '$1~/stats auth admin/ {print $NF; exit}' /etc/haproxy/haproxy.cfg.jahia/jahia-cloud.cfg)
          svc=$(awk -F':\\s*' '$1~/service/ {print $NF; exit}' $fileName)  # we keep the actual value for service tag
          if [ -n "$admPwd" ] && [ -n "$svc" ]; then
            curl -fLSso $fileName ${globals.repoRootUrl}/packages/jahia/migrations/v11_assets/dd_agent_haproxy_conf.yml || exit 1
            sed -e "s/service:.*$/service: ${svc}/" \
                -e "s/my_awesome_password/${admPwd}/" \
                -i $fileName
          else
            echo "No value(s) for admPwd and/or svc"
            exit 1
          fi
        fi
        systemctl restart datadog-agent
      user: root
