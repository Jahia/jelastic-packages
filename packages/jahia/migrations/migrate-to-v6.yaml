---
type: update
version: 1.5.2
name: Migrate Jahia env to v6
id: migrate-jahia-env-v6

# Required for healthchecks
mixins:
  - "../../../mixins/common.yml"
  - "../../../mixins/jahia.yml"
  - "../../../mixins/mariadb.yml"
  - "../../../mixins/haproxy.yml"
  - "../../../mixins/jcustomer.yml"

globals:
  version: 6

onInstall:
  ### Pre-checks
  - checkEnvVersion: ${globals.version}
  - checkJahiaHealth: "cp, proc"
  - checkHaproxyHealth: bl
  - checkMariadbHealth: sqldb
  - checkGaleraClusterHealth: sqldb
  - eventsUpdate
  ### End Pre-checks

  - addHaproxyOneRemainingBrowsingScript # PAAS-1598
  - updateJcustomerApiKey                # PAAS-1557

  ### Post-actions
  - setEnvVersion: ${globals.version}
  - logEvent:
      target: ${nodes.proc.first.id}
      title: "Environment $envName migrated"
      text: "Environment $envName migrated to v${globals.version}"
  - checkJahiaHealth: "cp, proc"
  - checkHaproxyHealth: bl
  - checkMariadbHealth: sqldb
  - checkGaleraClusterHealth: sqldb
  ### End Post-actions

actions:
  eventsUpdate:
    install:
      jps: "${baseUrl}../update-events.yml"

  addHaproxyOneRemainingBrowsingScript:
    - setGlobalRepoRootUrl
    - cmd [bl]: |-
        script_name="haproxy_one_remaining_browsing.py"
        script_path="/etc/datadog-agent/checks.d"
        if [ "960bd0e47ec25c3bd645187d008c8871" = "$(md5sum $script_path/$script_name | awk '{print $1}')" ]; then
          echo "haproxy_one_remaining_browsing.py script present, nothing to do"
          exit 0
        fi
        curl -fsSL -o $script_path/$script_name ${globals.repoRootUrl}/assets/haproxy/$script_name || exit 1
        systemctl restart datadog-agent || exit 1
      user: root

  updateJcustomerApiKey:
    - script: |
        const envName = "${env.envName}"
        envLinked = jelastic.env.control.GetNodeGroups(envName, session).object.filter(function (object) {
                             return object.name == "cp";
                          }).pop().envLink;
        return {'result': 0, 'out': envLinked};
    - if ("${response.out}" != "null" & "${response.out}" != ""):
        - setGlobals:
            envLinked: ${response.out}
        - getJcustomerKey:
            jcustomerEnv: ${globals.envLinked}
        - cmd[cp,proc]: |-
            CONF_FILENAME=org.jahia.modules.jexperience.settings-global.cfg
            CONF_PATH="/data/digital-factory-data/karaf/etc/$CONF_FILENAME"
            jcustomer_key=${globals.jcustomerKey}
            sed -i -r -e "s;[ #]*(\w+\.jCustomerKey\s*=\s*).*;\1${jcustomer_key};" $CONF_PATH
    - cmd[cp,proc]: rm -rf /root/.secrets
      user: root
