---
type: update
version: 1.5.2
name: Migrate Jahia env to v38
id: migrate-jahia-env-v38

# Required for healthchecks
mixins:
  - "../../../mixins/common.yml"
  - "../../../mixins/jahia.yml"
  - "../../../mixins/mariadb.yml"
  - "../../../mixins/haproxy.yml"
  - "../../../mixins/elasticsearch.yml"

globals:
  version: 38
  ignoredModules: ""

onInstall:
  ### Pre-migration actions
  - checkEnvVersion: ${globals.version}
  - if(!${settings.disable_checks}):
      - preChecks
  - else:
      log: "pre migration checks are disabled"
  - eventsUpdate
  - setGlobalRepoRootUrl
  ### End pre-migration actions

  # Actions that update modules (needs to be done first)
  # (None)

  # Regular actions
  - fixDatadogProductTag            # PAAS-2691
  - forceDatadogSite                # PAAS-2742
  - updateSendLogsCron              # PAAS-2739
  - getLogEventScript: bl, proc, cp, sqldb, storage  # PAAS-2746 (action from mixins/common.yml)

  # Actions that require a restart
  # (None)

  # Actions that require a redeploy
  # (None)

  # Redeploy and restart actions:
  - if ("${globals.jahiaRollingRedeployNeeded}" == "true"):
      - install:
          jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-redeploy.yml"
  - else:
      - if ("${globals.jahiaRollingRestartNeeded}" == "true"):
          - install:
              jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-restart.yml"

  # Actions that can only run when the redeploy is done
  # (None)

  ### Post-migration actions
  - setEnvVersion: ${globals.version}
  - if(!${settings.disable_checks}):
      - postChecks
  - else:
      log: "post migration checks are disabled"
  - logEvent:
      target: ${nodes.proc.first.id}
      title: "Environment $envName migrated"
      text: "Environment $envName migrated to v${globals.version}"
  ### End post-migration actions

actions:
  eventsUpdate:
    install:
      jps: "${baseUrl}../update-events.yml"

  preChecks:
    - checkJahiaHealth: "cp, proc"
    - checkJahiaDatadogCustomChecks: "cp, proc"
    - checkHaproxyHealth: bl
    - checkHaproxyDatadogCustomChecks: bl
    - checkMariadbHealth:
        target: sqldb
    - checkGaleraClusterHealth: sqldb
    - checkMariadbDatadogCustomChecks: sqldb
    - dumpModules:
        operation: migration
        checkVersion: true

  postChecks:
    - checkJahiaHealth: "cp, proc"
    - checkJahiaDatadogCustomChecks: "cp, proc"
    - checkHaproxyHealth: bl
    - checkHaproxyDatadogCustomChecks: bl
    - checkMariadbHealth:
        target: sqldb
    - checkGaleraClusterHealth: sqldb
    - checkMariadbDatadogCustomChecks: sqldb
    - checkModulesAfterOperation:
        operation: migration
        ignoredModules: ${globals.ignoredModules}
        checkVersion: true

  fixDatadogProductTag:
    cmd[bl, cp, proc, sqldb]: |-
      confFile="/etc/datadog-agent/datadog.yaml"
      tagFile="/usr/local/bin/set_dd_tags.sh"
      if ! (grep -q "product:jahia" $confFile); then
        sed -i 's/^ - product:.*/ - product:jahia/' $confFile
        sed -i '/product:/s|.*|echo " - product:$(awk '\''$2~/^product/ {split($2,a,":"); print a[2]}'\'' "$ddconffile")"|' $tagFile
        systemctl restart datadog-agent
      fi

  forceDatadogSite:
    cmd[bl, cp, proc, sqldb]: |-
      tagFile="/usr/local/bin/set_dd_tags.sh"
      if ! (grep -q "DD_SITE" $tagFile); then
        sed '/logs_enabled:/i echo "site: ${DD_SITE}"' -i $tagFile
      fi

  updateSendLogsCron:
    cmd[bl, cp, proc, sqldb, storage]: |-
      file_md5=f835639b2aa6af855ce38a1ead7790aa
      file_path=/usr/local/bin/rclone-logs.sh
      if ! (echo "$file_md5 $file_path" | md5sum --status -c); then
        curl -fLSso $file_path ${globals.repoRootUrl}/assets/common/rclone-logs.sh || exit 1
        chmod +x $file_path
      fi

settings:
  fields:
    - type: toggle
      name: disable_checks
      caption: disable all checks
