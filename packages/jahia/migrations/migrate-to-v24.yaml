---
type: update
version: 1.5.2
name: Migrate Jahia env to v24
id: migrate-jahia-env-v24

# Required for healthchecks
mixins:
  - "../../../mixins/common.yml"
  - "../../../mixins/jahia.yml"
  - "../../../mixins/mariadb.yml"
  - "../../../mixins/haproxy.yml"
  - "../../../mixins/jcustomer.yml"
  - "../../../mixins/elasticsearch.yml"

globals:
  version: 24

onInstall:
  ### Pre-checks
  - checkEnvVersion: ${globals.version}
  - checkJahiaHealth: "cp, proc"
  - checkJahiaDatadogCustomChecks: "cp, proc"
  - checkHaproxyHealth: bl
  - checkHaproxyDatadogCustomChecks: bl
  - checkMariadbHealth:
      target: sqldb
  - checkGaleraClusterHealth: sqldb
  - checkMariadbDatadogCustomChecks: sqldb
  - eventsUpdate
  - setGlobalRepoRootUrl
  ### End Pre-checks

  - removeSudoPermissions               # PAAS-2330
  - addIpDenyList                       # PAAS-2300
  - randomizeProxysqlCredentials        # PAAS-2331
  - addBlockLoginBruteForce             # PAAS-2336

  # Actions that require a restart
  - removeInfoFromErrorPage             # PAAS-2332

  # Restart action:
  - if ("${globals.jahiaRollingRestartNeeded}" == "true"):
      - install:
          jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-restart.yml"

  ### Post-actions
  - setEnvVersion: ${globals.version}
  - logEvent:
      target: ${nodes.proc.first.id}
      title: "Environment $envName migrated"
      text: "Environment $envName migrated to v${globals.version}"
  - checkJahiaHealth: "cp, proc"
  - checkJahiaDatadogCustomChecks: "cp, proc"
  - checkHaproxyHealth: bl
  - checkHaproxyDatadogCustomChecks: bl
  - checkMariadbHealth:
      target: sqldb
  - checkGaleraClusterHealth: sqldb
  - checkMariadbDatadogCustomChecks: sqldb
  ### End Post-actions

actions:
  eventsUpdate:
    install:
      jps: "${baseUrl}../update-events.yml"

  removeSudoPermissions:
    - setJelasticUserAsRoot: "*"
    - cmd [sqldb]: sed 's;\(^mysql.*\)/home/jelastic/\(.*\);\1/var/lib/mysql/\2;' /etc/passwd
      user: root
    - cmd [*]: rm -f /etc/sudoers.d/sudo
      user: root

  removeInfoFromErrorPage:
    - cmd[proc, cp]: |-
        server_conf=/opt/tomcat/conf/server.xml
        if ! grep -q "Remove stacktrace and tomcat version" $server_conf; then
          sed -i '/<!-- Access log processes all example\./i\        <!-- Remove stacktrace and tomcat version from error pages -->' $server_conf
          sed -i '/<!-- Access log processes all example\./i\        <Valve className="org.apache.catalina.valves.ErrorReportValve"  showReport="false"  showServerInfo="false" />\n' $server_conf
          echo restart
        fi
    - if("${response.out}" == "restart"):
        - setGlobals:
            jahiaRollingRestartNeeded: true

  addIpDenyList:
    - cmd[bl]: |-
        touch /etc/haproxy/blacklisted_ips.txt
        chown haproxy: /etc/haproxy/blacklisted_ips.txt
        if ! (grep -q "Blocking blackisted IPs" /etc/haproxy/haproxy.cfg.jahia/jahia-cloud.cfg); then
          sed '67i\
        \
            #Blocking blackisted IPs\
            acl jahia_cloud_spamlist hdr_ip(X-Forwarded-For) -f /etc/haproxy/blacklisted_ips.txt\
            http-request tarpit if jahia_cloud_spamlist' \
            -i /etc/haproxy/haproxy.cfg.jahia/jahia-cloud.cfg
          systemctl reload haproxy || exit 1
        fi

  randomizeProxysqlCredentials:
    - cmd[proc]: |-
        if ! (grep "password: admin" /etc/datadog-agent/conf.d/proxysql.d/custom_checks); then
          echo "up to date"
        fi

    - if("${response.out}" != "up to date"):
        - set:
            - __secret__proxysql_admin_password: ${fn.password(20)}
            - __secret__proxysql_monitoring_password: ${fn.password(20)}
            - __secret__proxysql_cluster_password: ${fn.password(20)}
        - env.control.AddContainerEnvVars[cp, proc]:
            vars:
              PROXYSQL_ADMIN_PASSWORD: "${this.__secret__proxysql_admin_password}"
              PROXYSQL_MONITORING_PASSWORD: "${this.__secret__proxysql_monitoring_password}"
              PROXYSQL_CLUSTER_PASSWORD: "${this.__secret__proxysql_cluster_password}"

        - setProxysqlCredsInConfig

        - cmd[${nodes.sqldb.first.id}]: |-
            __secret__password="${this.__secret__proxysql_monitoring_password}"
            mysql -e "ALTER USER 'proxysql'@'%' IDENTIFIED BY '$__secret__password'; FLUSH PRIVILEGES"
        - cmd[cp, proc]: |-
            source /.jelenv
            sed -i "s/password: admin/password: $PROXYSQL_ADMIN_PASSWORD/" /etc/datadog-agent/conf.d/proxysql.d/conf.yaml
            sed -i "s/password: admin/password: $PROXYSQL_ADMIN_PASSWORD/" /etc/datadog-agent/conf.d/proxysql.d/custom_checks
            systemctl restart datadog-agent

  addBlockLoginBruteForce:
    - cmd[bl]: |-
        if ! (grep -q "bk_error_429" /etc/haproxy/haproxy.cfg.jahia/jahia-cloud.cfg); then
          for f in backends rules; do
            curl -fLSso /tmp/haproxy-rates_${f}.txt ${globals.repoRootUrl}/packages/jahia/migrations/v24_assets/haproxy-rates_${f}.txt || exit 1
          done
          echo "^/cms.*/login.*$        20" > /etc/haproxy/haproxy.cfg.jahia/paths_rates.map
          chown haproxy: /etc/haproxy/haproxy.cfg.jahia/paths_rates.map
          sed -i /etc/haproxy/haproxy.cfg.jahia/jahia-cloud.cfg \
              -e '/^##CUSTOMER_RULES_START_HERE##/e cat /tmp/haproxy-rates_rules.txt' \
              -e '/^backend default/e cat /tmp/haproxy-rates_backends.txt'
          rm -f /tmp/haproxy-rates_*.txt
          systemctl reload haproxy || exit 2
        fi
