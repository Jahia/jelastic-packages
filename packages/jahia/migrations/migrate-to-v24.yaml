---
type: update
version: 1.5.2
name: Migrate Jahia env to v24
id: migrate-jahia-env-v24

# Required for healthchecks
mixins:
  - "../../../mixins/common.yml"
  - "../../../mixins/jahia.yml"
  - "../../../mixins/mariadb.yml"
  - "../../../mixins/haproxy.yml"
  - "../../../mixins/jcustomer.yml"
  - "../../../mixins/elasticsearch.yml"

globals:
  version: 24

onInstall:
  ### Pre-checks
  - checkEnvVersion: ${globals.version}
  - checkJahiaHealth: "cp, proc"
  - checkJahiaDatadogCustomChecks: "cp, proc"
  - checkHaproxyHealth: bl
  - checkHaproxyDatadogCustomChecks: bl
  - checkMariadbHealth:
      target: sqldb
  - checkGaleraClusterHealth: sqldb
  - checkMariadbDatadogCustomChecks: sqldb
  - eventsUpdate
  - setGlobalRepoRootUrl
  ### End Pre-checks

  - addIpDenyList                       # PAAS-2300

  # Actions that require a restart
  - removeInfoFromErrorPage             # PAAS-2332

  # Restart action:
  - if ("${globals.jahiaRollingRestartNeeded}" == "true"):
      - install:
          jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-restart.yml"

  ### Post-actions
  - setEnvVersion: ${globals.version}
  - logEvent:
      target: ${nodes.proc.first.id}
      title: "Environment $envName migrated"
      text: "Environment $envName migrated to v${globals.version}"
  - checkJahiaHealth: "cp, proc"
  - checkJahiaDatadogCustomChecks: "cp, proc"
  - checkHaproxyHealth: bl
  - checkHaproxyDatadogCustomChecks: bl
  - checkMariadbHealth:
      target: sqldb
  - checkGaleraClusterHealth: sqldb
  - checkMariadbDatadogCustomChecks: sqldb
  ### End Post-actions

actions:
  eventsUpdate:
    install:
      jps: "${baseUrl}../update-events.yml"

  removeInfoFromErrorPage:
    - cmd[proc, cp]: |-
        server_conf=/opt/tomcat/conf/server.xml
        if ! grep -q "Remove stacktrace and tomcat version" $server_conf; then
          sed -i '/<!-- Access log processes all example\./i\        <!-- Remove stacktrace and tomcat version from error pages -->' $server_conf
          sed -i '/<!-- Access log processes all example\./i\        <Valve className="org.apache.catalina.valves.ErrorReportValve"  showReport="false"  showServerInfo="false" />\n' $server_conf
          echo restart
        fi
    - if("${response.out}" == "restart"):
        - setGlobals:
            jahiaRollingRestartNeeded: true

  addIpDenyList:
    - cmd[bl]: |-
        touch /etc/haproxy/blacklisted_ips.txt
        chown haproxy: /etc/haproxy/blacklisted_ips.txt
        if ! (grep -q "Blocking blackisted IPs" /etc/haproxy/haproxy.cfg.jahia/jahia-cloud.cfg); then
          sed '67i\
        \
            #Blocking blackisted IPs\
            acl jahia_cloud_spamlist hdr_ip(X-Forwarded-For) -f /etc/haproxy/blacklisted_ips.txt\
            http-request tarpit if jahia_cloud_spamlist' \
            -i /etc/haproxy/haproxy.cfg.jahia/jahia-cloud.cfg
          systemctl reload haproxy || exit 1
        fi
      user: root
