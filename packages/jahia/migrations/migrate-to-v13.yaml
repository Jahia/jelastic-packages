---
type: update
version: 1.5.2
name: Migrate Jahia env to v13
id: migrate-jahia-env-v13

# Required for healthchecks
mixins:
  - "../../../mixins/common.yml"
  - "../../../mixins/jahia.yml"
  - "../../../mixins/mariadb.yml"
  - "../../../mixins/haproxy.yml"
  - "../../../mixins/jcustomer.yml"

globals:
  version: 13

onInstall:
  ### Pre-checks
  - checkEnvVersion: ${globals.version}
  - checkJahiaHealth: "cp, proc"
  - checkJahiaDatadogCustomChecks: "cp, proc"
  - checkHaproxyHealth: bl
  - checkHaproxyDatadogCustomChecks: bl
  - checkMariadbHealth:
      target: sqldb
  - checkGaleraClusterHealth: sqldb
  - checkMariadbDatadogCustomChecks: sqldb
  - eventsUpdate
  - setGlobalRepoRootUrl
  ### End Pre-checks

  - cleanRevisionsIfNeeded  # PAAS-2026

  ### Post-actions
  - setEnvVersion: ${globals.version}
  - logEvent:
      target: ${nodes.proc.first.id}
      title: "Environment $envName migrated"
      text: "Environment $envName migrated to v${globals.version}"
  - checkJahiaHealth: "cp, proc"
  - checkJahiaDatadogCustomChecks: "cp, proc"
  - checkHaproxyHealth: bl
  - checkHaproxyDatadogCustomChecks: bl
  - checkMariadbHealth: sqldb
  - checkGaleraClusterHealth: sqldb
  - checkMariadbDatadogCustomChecks: sqldb
  ### End Post-actions

actions:
  eventsUpdate:
    install:
      jps: "${baseUrl}../update-events.yml"

  cleanRevisionsIfNeeded:
  - cmd [proc]: |-
      tmpfile=$(mktemp)
      sql_cmd="mysql -E -u $DB_USER -p$DB_PASSWORD -h 127.0.0.1 -D jahia -P6033"
      sql_query="select count(*) as COUNT_TOTAL from JR_J_LOCAL_REVISIONS; select count(*)\
       as COUNT_INVALID from JR_J_LOCAL_REVISIONS where JOURNAL_ID like '%dx%';"
      $sql_cmd -e "$sql_query" > $tmpfile
      count_total=$(grep COUNT_TOTAL $tmpfile | cut -d' ' -f2)
      count_invalid=$(grep COUNT_INVALID $tmpfile | cut -d' ' -f2)
      nb_nodes=$(( ${nodes.cp.length} + 1 ))
      result=false
      if [ $count_invalid -gt 0 ] || [ $count_total -gt $nb_nodes ]; then
        result=true
      fi
      echo $result
      rm -f $tmpfile
      exit 0
  - if (${response.out}):
      - cleanJRLocalRevisionsTable
      - cleanJRJJournalTable:
          batchSize: 100000
  - else:
      - log: "Table JR_J_LOCAL_REVISIONS is up-to-date, nothing to do"
