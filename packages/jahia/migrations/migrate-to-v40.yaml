---
type: update
version: 1.5.2
name: Migrate Jahia env to v39
id: migrate-jahia-env-v39

# Required for healthchecks
mixins:
  - "../../../mixins/common.yml"
  - "../../../mixins/jahia.yml"
  - "../../../mixins/mariadb.yml"
  - "../../../mixins/haproxy.yml"
  - "../../../mixins/elasticsearch.yml"

globals:
  version: 39
  ignoredModules: ""

onInstall:
  ### Pre-migration actions
  - checkEnvProvides: jahia
  - checkEnvVersion: ${globals.version}
  - if(!${settings.disable_checks}):
      - preChecks
  - else:
      log: "pre migration checks are disabled"
  - eventsUpdate
  - setGlobalRepoRootUrl
  ### End pre-migration actions

  # Actions that update modules (needs to be done first)
  # (None)

  # Regular actions
  # (None)

  # Actions that require a restart
  # (None)

  # Actions that require a redeploy
  - migrateJahia82ToGraalVM           # PAAS-2406

  # Redeploy and restart actions:
  - if ("${globals.jahiaRollingRedeployNeeded}" == "true"):
      - install:
          jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-redeploy.yml"
  - else:
      - if ("${globals.jahiaRollingRestartNeeded}" == "true"):
          - install:
              jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-restart.yml"

  # Actions that can only run when the redeploy is done
  - addTomcatEnvBackToRedeployFile

  ### Post-migration actions
  - setEnvVersion: ${globals.version}
  - if(!${settings.disable_checks}):
      - postChecks
  - else:
      log: "post migration checks are disabled"
  - logEvent:
      target: ${nodes.proc.first.id}
      title: "Environment $envName migrated"
      text: "Environment $envName migrated to v${globals.version}"
  ### End post-migration actions

actions:
  eventsUpdate:
    install:
      jps: "${baseUrl}../update-events.yml"

  preChecks:
    - checkJahiaHealth: "cp, proc"
    - checkJahiaDatadogCustomChecks: "cp, proc"
    - checkHaproxyHealth: bl
    - checkHaproxyDatadogCustomChecks: bl
    - checkMariadbHealth:
        target: sqldb
    - checkGaleraClusterHealth: sqldb
    - checkMariadbDatadogCustomChecks: sqldb
    - dumpModules:
        operation: migration
        checkVersion: true

  postChecks:
    - checkJahiaHealth: "cp, proc"
    - checkJahiaDatadogCustomChecks: "cp, proc"
    - checkHaproxyHealth: bl
    - checkHaproxyDatadogCustomChecks: bl
    - checkMariadbHealth:
        target: sqldb
    - checkGaleraClusterHealth: sqldb
    - checkMariadbDatadogCustomChecks: sqldb
    - checkModulesAfterOperation:
        operation: migration
        ignoredModules: ${globals.ignoredModules}
        checkVersion: true

  migrateJahia82ToGraalVM:
    - getJahiaVersion
    - isVersionHigherOrEqual:
        a: ${globals.jahiaVersion}
        b: 8.2.0.0
        res: jahia82plus
    - cmd [proc, cp]: "[ -d /opt/graalvm ] || echo \"redeploy needed\""
    - if ("${response.out}" == "redeploy needed"):
        # We need to remove /opt/tomcat/conf/tomcat-env.sh from the redeploy list so
        # it can be up-to-date following the redeploy. The file will be added again
        # once the redeploy is done
        - cmd [proc, cp]: sed '/tomcat-env.sh/d' -i /etc/jelastic/redeploy.conf
        - if (${globals.jahia82plus}):
            - setGlobals:
                jahiaRollingRedeployNeeded: true

  addTomcatEnvBackToRedeployFile:
    - if (${globals.jahiaRollingRedeployNeeded}):
        - cmd [proc, cp]: |-
            f=/etc/jelastic/redeploy.conf
            tomcat_env=tomcat-env.sh
            if ! grep -q $tomcat_env $f; then
              sed "/jelastic-ssl.xml/a /opt/tomcat/conf/$tomcat_env" -i $f
            fi

settings:
  fields:
    - type: toggle
      name: disable_checks
      caption: disable all checks
