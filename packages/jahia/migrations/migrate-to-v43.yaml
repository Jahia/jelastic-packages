---
type: update
version: 1.5.2
name: Migrate Jahia env to v43
id: migrate-jahia-env-v43

# Required for healthchecks
mixins:
  - "../../../mixins/common.yml"
  - "../../../mixins/jahia.yml"
  - "../../../mixins/mariadb.yml"
  - "../../../mixins/haproxy.yml"
  - "../../../mixins/elasticsearch.yml"

globals:
  version: 43

onInstall:
  ### Pre-migration actions
  - checkEnvProvides: jahia
  - checkEnvVersion: ${globals.version}
  - if(!${settings.disable_checks}):
      - preChecks
  - else:
      log: "pre migration checks are disabled"
  #- eventsUpdate # !!!!!!!!!!!!!!!!!! Do not forget to set it for version 44 !!!!!!!!!!!!!!!!!!
  - setGlobalRepoRootUrl
  ### End pre-migration actions

  # Actions that update modules (needs to be done first)

  # Regular actions

  # Actions that require a restart

  # Redeploy and restart actions:
  - jahiaToAlmalinux

  - if ("${globals.jahiaRollingRedeployNeeded}" == "true"):
      - install:
          jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-redeploy.yml"
  - else:
      - if ("${globals.jahiaRollingRestartNeeded}" == "true"):
          - install:
              jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-restart.yml"

  # Actions that can only run when the redeploy is done
  # (None)

  ### Post-migration actions
  - setEnvVersion: ${globals.version}
  - if(!${settings.disable_checks}):
      - postChecks
  - else:
      log: "post migration checks are disabled"
  - logEvent:
      target: ${nodes.proc.first.id}
      title: "Environment $envName migrated"
      text: "Environment $envName migrated to v${globals.version}"
  ### End post-migration actions

actions:
  eventsUpdate:
    install:
      jps: "${baseUrl}../update-events.yml"

  preChecks:
    - checkJahiaHealth: "cp, proc"
    - checkJahiaDatadogCustomChecks: "cp, proc"
    - checkHaproxyHealth: bl
    - checkHaproxyDatadogCustomChecks: bl
    - checkMariadbHealth:
        target: sqldb
    - checkGaleraClusterHealth: sqldb
    - checkMariadbDatadogCustomChecks: sqldb
#    - checkDatadogBrowserTests
    - dumpModules:
        operation: migration
        checkVersion: true

  postChecks:
    - checkJahiaHealth: "cp, proc"
    - checkJahiaDatadogCustomChecks: "cp, proc"
    - checkHaproxyHealth: bl
    - checkHaproxyDatadogCustomChecks: bl
    - checkMariadbHealth:
        target: sqldb
    - checkGaleraClusterHealth: sqldb
    - checkMariadbDatadogCustomChecks: sqldb
#    - checkDatadogBrowserTests:
#        postCheck: true
    - checkModulesAfterOperation:
        operation: migration
        ignoredModules: ${globals.ignoredModules}
        checkVersion: true

  jahiaToAlmalinux:
    - dumpModules:
        operation: redeploy
        checkVersion: true

    - set:
        currentDockerTag: ${nodes.proc.first.customitem.dockerTag}

    ## Redeploy Jahia nodes
    - cmd[proc]: |-
        if [ ! -f /etc/almalinux-release ]; then
          echo "Redeploy"
        fi
    - if ("${response.out}" == "Redeploy"):
        - procRedeploy:
            upgradeJahia: false
            targetDockerTag: ${this.currentDockerTag}

    - forEach (nodes.cp):
        - cmd[${@i.id}]: |-
            if [ ! -f /etc/almalinux-release ]; then
              echo "Redeploy"
            fi
        - if ("${response.out}" == "Redeploy"):
            - api: environment.control.RedeployContainerById
              nodeId: ${@i.id}
              tag: ${this.currentDockerTag}
              useExistingVolumes: true
              skipReinstall: false
              envName: ${env.envName}
            - refreshSAM:
                target: ${@i.id}
            - callProvisioningAPI:
                target: ${@i.id}
                payload:
                  - karafCommand: "bundle:refresh distributed-sessions"

    - checkModulesAfterOperation:
        operation: redeploy
        checkVersion: true

settings:
  fields:
    - type: toggle
      name: disable_checks
      caption: disable all checks
