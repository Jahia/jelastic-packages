# Export some envvars so that we can use them in haproxy conf:
eval "export $(grep -E "^(jahia_cfg_healthcheck_token|haproxy_cfg_\w+)=" /.jelenv | sed -z 's/\n/ /g')"

case $1 in
    "start"|"restart"|"reload")
        haproxy_cfg=/etc/haproxy/haproxy.cfg
        jahia_cloud_cfg=/etc/haproxy/haproxy.cfg.jahia/jahia-cloud.cfg
        customer_rules_file=/etc/haproxy/haproxy.cfg.jahia/customer.cfg
        customer_rules_dir=/etc/haproxy/haproxy.cfg.jahia/customer.configuration.d

        echo "" > $customer_rules_file
        for f in $(ls $customer_rules_dir/*.cfg 2>/dev/null); do
            echo "## CUSTOMER_FILENAME $f" >> $customer_rules_file
            cat $f >> $customer_rules_file
        done

        cp $jahia_cloud_cfg $haproxy_cfg
        sed -i "/^##CUSTOMER_RULES_START_HERE##/ r $customer_rules_file" $haproxy_cfg
esac

# The following is related to PAAS-1836: # "HAProxy service remains stopped after environment start"
# To be quick:
# this is a workaround that allows us to make sure that,
# after an `haproxy reload service`, the new haproxy instance does not receive a SIGTERM.
if [[ "$1" == "reload" ]]; then
  { sleep 1; } | telnet 127.0.0.1 80 > /dev/null 2>&1 &
fi
