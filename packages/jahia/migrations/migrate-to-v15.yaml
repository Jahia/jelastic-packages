---
type: update
version: 1.5.2
name: Migrate Jahia env to v15
id: migrate-jahia-env-v15

# Required for healthchecks
mixins:
  - "../../../mixins/common.yml"
  - "../../../mixins/jahia.yml"
  - "../../../mixins/mariadb.yml"
  - "../../../mixins/haproxy.yml"
  - "../../../mixins/jcustomer.yml"

globals:
  version: 15

onInstall:
  ### Pre-checks
  - checkEnvVersion: ${globals.version}
  - checkJahiaHealth: "cp, proc"
  - checkJahiaDatadogCustomChecks: "cp, proc"
  - checkHaproxyHealth: bl
  - checkHaproxyDatadogCustomChecks: bl
  - checkMariadbHealth:
      target: sqldb
  - checkGaleraClusterHealth: sqldb
  - checkMariadbDatadogCustomChecks: sqldb
  - eventsUpdate
  - setGlobalRepoRootUrl
  ### End Pre-checks

  # Actions that require a restart:
  - enableIoCheck                                         # PAAS-1543
  - addAPMOptsForFormsIssue                               # PAAS-2044
  - updateMavenPathEnvVar                                 # PAAS-2038
  - haproxyCheckConformRFC                                # COPS-571

  # Restart actions:
  - restartDDAgentOnJahiaNodes                            # needed for PAAS-1543

  ### Post-actions
  - setEnvVersion: ${globals.version}
  - logEvent:
      target: ${nodes.proc.first.id}
      title: "Environment $envName migrated"
      text: "Environment $envName migrated to v${globals.version}"
  - checkJahiaHealth: "cp, proc"
  - checkJahiaDatadogCustomChecks: "cp, proc"
  - checkHaproxyHealth: bl
  - checkHaproxyDatadogCustomChecks: bl
  - checkMariadbHealth: sqldb
  - checkGaleraClusterHealth: sqldb
  - checkMariadbDatadogCustomChecks: sqldb
  ### End Post-actions

actions:
  eventsUpdate:
    install:
      jps: "${baseUrl}../update-events.yml"

  enableIoCheck:
    - cmd[cp,proc,sqldb,bl]: |-
        io_conf_path=/etc/datadog-agent/conf.d/io.d/conf.yaml.default
        if [ -f "$io_conf_path.disabled" ]; then
          mv $io_conf_path.disabled $io_conf_path
        fi
      user: root
    # Only restart agent on DB and HAProxy nodes, since jahia nodes are handled in a another action
    - cmd[sqldb,bl]: |-
        systemctl restart datadog-agent
      user: root

  restartDDAgentOnJahiaNodes:
    - cmd[cp,proc]: |-
        # Launch "set_dd_tags" script
        output="$(/usr/local/bin/set_dd_tags.sh)"
        # Force agent restart in case "set_dd_tags" didn't already do it
        if [ "$output" = "Tags are up to date, exiting." ]; then
          echo "Force datadog-agent restart"
          systemctl restart datadog-agent
        fi
      user: root

  addAPMOptsForFormsIssue:
    - api: env.control.GetContainerEnvVarsByGroup
      nodeGroup: proc
    - if ("${response.object.DATADOG_APM_ENABLED}" == "true"):
        cmd[cp, proc]: |-
          tomcat_env=/opt/tomcat/conf/tomcat-env.sh
          if (grep -q '\-Ddd.trace.classes.exclude=*' $tomcat_env); then
            echo "[INFO] APM options are up to date"
            exit 0
          fi
          new_apm_opts='APM_OPTS="-Ddd.profiling.enabled=true -XX:FlightRecorderOptions=stackdepth=256 -Ddd.logs.injection=true -javaagent:/opt/tomcat/datadog/dd-java-agent.jar -Ddd.service=jahia -Ddd.env=${env.domain} -Ddd.trace.classes.exclude=org.jahia.modules.forms.dsl.*,org.jahia.modules.databaseConnector.dsl.*"'
          sed -i "/^APM_OPTS=.*/c $new_apm_opts" $tomcat_env
    - if ("${response.out}" == ""):
        - jahiaRollingRestart

  jahiaRollingRestart:
    - install:
        jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-restart.yml"

  updateMavenPathEnvVar:
    - getMavenPath
    - api: env.control.GetContainerEnvVars
      nodeId: ${nodes.proc.first.id}
    - if ("${response.object.jahia_cfg_mvnPath}" != "${globals.jahia_cfg_mvnPath}"):
        - env.control.AddContainerEnvVars [cp, proc]:
          vars:
            jahia_cfg_mvnPath: ${globals.jahia_cfg_mvnPath}
        - jahiaRollingRestart

  haproxyCheckConformRFC:
    - cmd[bl]: |-
        HAPROXY_CONF_DIR=/etc/haproxy/haproxy.cfg.jahia
        hash=$(grep -E "\s+option httpchk GET" $HAPROXY_CONF_DIR/jahia-cloud.cfg | md5sum | awk '{print $1}')
        if [[ "$hash" == "15b46715eca4f35b86c62579986789fa" ]]; then
          echo "up to date"
        else
          # fetches the new haproxy configuration conforming to RFC 7320 (aka "always use CRLF")
          stats_pwd=$(awk '$1=="password:" {print $2}' /etc/datadog-agent/conf.d/haproxy.d/conf.yaml)
          curl -fLSso $HAPROXY_CONF_DIR/jahia-cloud.cfg ${globals.repoRootUrl}/assets/haproxy/haproxy-jahia-cloud.cfg || exit 1
          sed -i "s/admin-stat-password/$stats_pwd/g" /etc/haproxy/haproxy.cfg.jahia/jahia-cloud.cfg
        fi
    - if("${response.out}" == ""):
        - resetHaproxyBackends
