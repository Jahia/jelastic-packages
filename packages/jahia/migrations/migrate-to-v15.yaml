---
type: update
version: 1.5.2
name: Migrate Jahia env to v15
id: migrate-jahia-env-v15

# Required for healthchecks
mixins:
  - "../../../mixins/common.yml"
  - "../../../mixins/jahia.yml"
  - "../../../mixins/mariadb.yml"
  - "../../../mixins/haproxy.yml"
  - "../../../mixins/jcustomer.yml"

globals:
  version: 15

onInstall:
  ### Pre-checks
  - checkEnvVersion: ${globals.version}
  - checkJahiaHealth: "cp, proc"
  - checkJahiaDatadogCustomChecks: "cp, proc"
  - checkHaproxyHealth: bl
  - checkHaproxyDatadogCustomChecks: bl
  - checkMariadbHealth:
      target: sqldb
  - checkGaleraClusterHealth: sqldb
  - checkMariadbDatadogCustomChecks: sqldb
  - eventsUpdate
  - setGlobalRepoRootUrl
  ### End Pre-checks

  # Actions that require a restart:
  - enableIoCheck                                         # PAAS-1543

  # Restart actions:
  - restartDDAgentOnJahiaNodes                            # needed for PAAS-1543

  ### Post-actions
  - setEnvVersion: ${globals.version}
  - logEvent:
      target: ${nodes.proc.first.id}
      title: "Environment $envName migrated"
      text: "Environment $envName migrated to v${globals.version}"
  - checkJahiaHealth: "cp, proc"
  - checkJahiaDatadogCustomChecks: "cp, proc"
  - checkHaproxyHealth: bl
  - checkHaproxyDatadogCustomChecks: bl
  - checkMariadbHealth: sqldb
  - checkGaleraClusterHealth: sqldb
  - checkMariadbDatadogCustomChecks: sqldb
  ### End Post-actions

actions:
  eventsUpdate:
    install:
      jps: "${baseUrl}../update-events.yml"

  enableIoCheck:
    - cmd[cp,proc,sqldb,bl]: |-
        io_conf_path=/etc/datadog-agent/conf.d/io.d/conf.yaml.default
        if [ -f "$io_conf_path.disabled" ]; then
          mv $io_conf_path.disabled $io_conf_path
        fi
      user: root
    # Only restart agent on DB and HAProxy nodes, since jahia nodes are handled in a another action
    - cmd[sqldb,bl]: |-
        systemctl restart datadog-agent
      user: root

  restartDDAgentOnJahiaNodes:
    - cmd[cp,proc]: |-
        # Launch "set_dd_tags" script
        output="$(/usr/local/bin/set_dd_tags.sh)"
        # Force agent restart in case "set_dd_tags" didn't already do it
        if [ "$output" = "Tags are up to date, exiting." ]; then
          echo "Force datadog-agent restart"
          systemctl restart datadog-agent
        fi
      user: root
