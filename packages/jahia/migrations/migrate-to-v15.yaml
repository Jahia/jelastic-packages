---
type: update
version: 1.5.2
name: Migrate Jahia env to v15
id: migrate-jahia-env-v15

# Required for healthchecks
mixins:
  - "../../../mixins/common.yml"
  - "../../../mixins/jahia.yml"
  - "../../../mixins/mariadb.yml"
  - "../../../mixins/haproxy.yml"
  - "../../../mixins/jcustomer.yml"

globals:
  version: 15
  jahiaRollingRestartNeeded: false

onInstall:
  ### Pre-checks
  - checkEnvVersion: ${globals.version}
  - checkJahiaHealth: "cp, proc"
  - checkJahiaDatadogCustomChecks: "cp, proc"
  - checkHaproxyHealth: bl
  - checkHaproxyDatadogCustomChecks: bl
  - checkMariadbHealth:
      target: sqldb
  - checkGaleraClusterHealth: sqldb
  - checkMariadbDatadogCustomChecks: sqldb
  - eventsUpdate
  - setGlobalRepoRootUrl
  ### End Pre-checks

  - deleteDuplicateTomcatEnvLines                         # PAAS-1973

  # Actions that require a restart:
  - enableIoCheck                                         # PAAS-1543
  - addAPMOptsForFormsIssue                               # PAAS-2044
  - updateMavenPathEnvVar                                 # PAAS-2038
  - haproxyCheckConformRFC                                # PAAS-2070
  - updateHaproxySessionCookie                            # PAAS-1983
  - revertJsessionIdPatch                                 # PAAS-1984

  # Restart actions:
  - restartDDAgentOnJahiaNodes                            # needed for PAAS-1543
  - if ("${globals.jahiaRollingRestartNeeded}" == "true"):
      - install:
          jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-restart.yml"

  ### Post-actions
  - setEnvVersion: ${globals.version}
  - logEvent:
      target: ${nodes.proc.first.id}
      title: "Environment $envName migrated"
      text: "Environment $envName migrated to v${globals.version}"
  - checkJahiaHealth: "cp, proc"
  - checkJahiaDatadogCustomChecks: "cp, proc"
  - checkHaproxyHealth: bl
  - checkHaproxyDatadogCustomChecks: bl
  - checkMariadbHealth: sqldb
  - checkGaleraClusterHealth: sqldb
  - checkMariadbDatadogCustomChecks: sqldb
  ### End Post-actions

actions:
  eventsUpdate:
    install:
      jps: "${baseUrl}../update-events.yml"

  enableIoCheck:
    - cmd[cp,proc,sqldb,bl]: |-
        io_conf_path=/etc/datadog-agent/conf.d/io.d/conf.yaml.default
        if [ -f "$io_conf_path.disabled" ]; then
          mv $io_conf_path.disabled $io_conf_path
        fi
      user: root
    # Only restart agent on DB and HAProxy nodes, since jahia nodes are handled in a another action
    - cmd[sqldb,bl]: |-
        systemctl restart datadog-agent
      user: root

  restartDDAgentOnJahiaNodes:
    - cmd[cp,proc]: |-
        # Launch "set_dd_tags" script
        output="$(/usr/local/bin/set_dd_tags.sh)"
        # Force agent restart in case "set_dd_tags" didn't already do it
        if [ "$output" = "Tags are up to date, exiting." ]; then
          echo "Force datadog-agent restart"
          systemctl restart datadog-agent
        fi
      user: root

  addAPMOptsForFormsIssue:
    - api: env.control.GetContainerEnvVarsByGroup
      nodeGroup: proc
    - if ("${response.object.DATADOG_APM_ENABLED}" == "true"):
        cmd[cp, proc]: |-
          tomcat_env=/opt/tomcat/conf/tomcat-env.sh
          if (grep -q '\-Ddd.trace.classes.exclude=*' $tomcat_env); then
            echo "[INFO] APM options are up to date"
            exit 0
          fi
          new_apm_opts='APM_OPTS="-Ddd.profiling.enabled=true -XX:FlightRecorderOptions=stackdepth=256 -Ddd.logs.injection=true -javaagent:/opt/tomcat/datadog/dd-java-agent.jar -Ddd.service=jahia -Ddd.env=${env.domain} -Ddd.trace.classes.exclude=org.jahia.modules.forms.dsl.*,org.jahia.modules.databaseConnector.dsl.*"'
          sed -i "/^APM_OPTS=.*/c $new_apm_opts" $tomcat_env
    - if ("${response.out}" == ""):
        - setGlobals:
            jahiaRollingRestartNeeded: true

  updateMavenPathEnvVar:
    - getMavenPath
    - api: env.control.GetContainerEnvVars
      nodeId: ${nodes.proc.first.id}
    - if ("${response.object.jahia_cfg_mvnPath}" != "${globals.jahia_cfg_mvnPath}"):
        - env.control.AddContainerEnvVars [cp, proc]:
          vars:
            jahia_cfg_mvnPath: ${globals.jahia_cfg_mvnPath}
        - setGlobals:
            jahiaRollingRestartNeeded: true

  deleteDuplicateTomcatEnvLines:
    cmd[cp, proc]: |-
      tomcat_env=/opt/tomcat/conf/tomcat-env.sh
      echo "JMX_OPTS
      jahia_cfg_cluster_tcp_bindAddress
      APM_OPTS
      \$DATADOG_APM_ENABLED" > /tmp/lines_to_check
      tac ${tomcat_env} > /tmp/reverse_tomcat-env.sh
      while read line; do
        sed -i "0,/^$line/b;/^$line/d" /tmp/reverse_tomcat-env.sh
      done < /tmp/lines_to_check
      tac /tmp/reverse_tomcat-env.sh > /tmp/deduped_tomcat-env.sh
      if [ "$(md5sum < ${tomcat_env})" = "$(md5sum < /tmp/deduped_tomcat-env.sh)" ]; then
        rm -rf /tmp/lines_to_check /tmp/reverse_tomcat-env.sh /tmp/deduped_tomcat-env.sh
        echo "[INFO] No duplicate lines found in tomcat-env.sh"
        exit 0
      fi
      mv /tmp/deduped_tomcat-env.sh ${tomcat_env}
      rm -rf /tmp/lines_to_check /tmp/reverse_tomcat-env.sh

  haproxyCheckConformRFC:
    - cmd[bl]: |-
        conf_file=/etc/haproxy/haproxy.cfg.jahia/jahia-cloud.cfg
        hash=$(md5sum $conf_file | awk '{print $1}')
        sed -i -r '/^\s+option httpchk/s,([^\\][^r])\\n,\1\\r\\n,g' $conf_file
        new_hash=$(md5sum $conf_file | awk '{print $1}')

        if [[ "$hash" == "$new_hash" ]]; then
          echo "jahia-cloud.cfg is up to date"
        else
          service haproxy reload
        fi
      user: root

  updateHaproxySessionCookie:
    - cmd[bl]: |-
        HAPROXY_CONF_DIR=/etc/haproxy/haproxy.cfg.jahia
        HAPROXY_CONF=$HAPROXY_CONF_DIR/jahia-cloud.cfg
        if (grep -qw 'JSESSIONID' $HAPROXY_CONF); then
          cookie_line1="use_backend proc if { cook(SERVERID),lower -m beg s${nodes.proc.first.id} }"
          cookie_line2="cookie SERVERID insert nocache httponly secure"
          sed -i "/use_backend proc.*/c \ \ \ \ $cookie_line1" $HAPROXY_CONF
          sed -i "/cookie JSESSIONID.*/c \ \ \ \ $cookie_line2" $HAPROXY_CONF
          service haproxy reload
        fi
      user: root

  revertJsessionIdPatch:
    - getJahiaVersion
    - if ( "${globals.jahiaVersion}" == "8.1.1.0"):
        - updateTomcatConfFiles

  updateTomcatConfFiles:
    - cmd[cp, proc]: |-
        files=(/opt/tomcat/webapps/ROOT/WEB-INF/web.xml /constant_data/jahia/tomcat/webapps/ROOT/WEB-INF/web.xml)
        for file in "${files[@]}"; do
          line=$(awk '/sessionCreate/ {print NR}' $file)
          if [ ! -z $line ]; then
            start=$((line-2))
            comment=$(sed -n $start"p" $file | grep "<\!--")
            if [ -z $comment ]; then
              continue
            fi
            end=$((line+3))
            before=$(md5sum $file)
            sed -i -e "$start d;$end d" $file
            after=$(md5sum $file)
            if [ "$after" != "$before" ];  then
              echo "updated"
            fi
          fi
        done
    - if ( "${response.out}" != "" ):
        - setGlobals:
            jahiaRollingRestartNeeded: true
