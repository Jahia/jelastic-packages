---
type: update
version: 1.5.2
name: Migrate Jahia env to v26
id: migrate-jahia-env-v26

# Required for healthchecks
mixins:
  - "../../../mixins/common.yml"
  - "../../../mixins/jahia.yml"
  - "../../../mixins/mariadb.yml"
  - "../../../mixins/haproxy.yml"
  - "../../../mixins/jcustomer.yml"
  - "../../../mixins/elasticsearch.yml"

globals:
  version: 26

onInstall:
  ### Pre-checks
  - checkEnvVersion: ${globals.version}
  - if(!${settings.disable_checks}):
      - checkJahiaHealth: "cp, proc"
      - checkJahiaDatadogCustomChecks: "cp, proc"
      - checkHaproxyHealth: bl
      - checkHaproxyDatadogCustomChecks: bl
      - checkMariadbHealth:
          target: sqldb
      - checkGaleraClusterHealth: sqldb
      - checkMariadbDatadogCustomChecks: sqldb
  - else:
      log: "pre migration checks are disabled"
  - eventsUpdate
  - setGlobalRepoRootUrl
  ### End Pre-checks

  - addBlockMaliciousXForwardedFor           # PAAS-2335
  - upgradeSam                               # PAAS-2318
  - setNodeDistribution                      # PAAS-2291

  # Actions that require a restart

  # Actions that require a redeploy
  - upgradeTomcat                            # PAAS-2219

  # Redeploy and restart actions:
  - if ("${globals.jahiaRollingRedeployNeeded}" == "true"):
      - install:
          jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-redeploy.yml"
  - else:
      - if ("${globals.jahiaRollingRestartNeeded}" == "true"):
          - install:
              jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-restart.yml"

  ### Post-actions
  - setEnvVersion: ${globals.version}
  - if(!${settings.disable_checks}):
      - checkJahiaHealth: "cp, proc"
      - checkJahiaDatadogCustomChecks: "cp, proc"
      - checkHaproxyHealth: bl
      - checkHaproxyDatadogCustomChecks: bl
      - checkMariadbHealth:
          target: sqldb
      - checkGaleraClusterHealth: sqldb
      - checkMariadbDatadogCustomChecks: sqldb
  - else:
      log: "post migration checks are disabled"
  - logEvent:
      target: ${nodes.proc.first.id}
      title: "Environment $envName migrated"
      text: "Environment $envName migrated to v${globals.version}"
  ### End Post-actions

actions:
  eventsUpdate:
    install:
      jps: "${baseUrl}../update-events.yml"

  addBlockMaliciousXForwardedFor:
    - cmd[bl]: |-
        if ! (grep -q "malicious forged" /etc/haproxy/haproxy.cfg.jahia/jahia-cloud.cfg); then
          curl -fLSso /tmp/haproxy-good_ip_forwarding_for.txt ${globals.repoRootUrl}/packages/jahia/migrations/v25_assets/haproxy-good_ip_forwarding_for.txt || exit 1
          sed -r -i /etc/haproxy/haproxy.cfg.jahia/jahia-cloud.cfg \
              -e '/^\s+http-response set-header X-Content-Type-Options "nosniff"/e cat /tmp/haproxy-good_ip_forwarding_for.txt'
          rm -f /tmp/haproxy-good_ip_forwarding_for.txt
          systemctl reload haproxy || exit 2
        fi

  upgradeSam:
    - getJahiaVersion
    - isVersionHigherOrEqual:
        a: ${globals.jahiaVersion}
        b: 8.1.2.0
        res: isHigherOrEqualThan8120
    - if (${globals.isHigherOrEqualThan8120}):
        - checkModule:
            moduleSymname: server-availability-manager
        - if ("${globals.runningVersion}" != "2.6.0"):
            - disableHaproxyHealthcheck
            - installOrUpgradeModule:
                moduleSymname: server-availability-manager
                moduleVersion: 2.6.0
                moduleGroupId: org.jahia.modules
                moduleRepository: jahia-releases
            - checkJahiaHealth: "cp, proc"
            - enableHaproxyHealthcheck

  upgradeTomcat:
    - api: env.control.GetContainerEnvVars
      nodeId: ${nodes.proc.first.id}
    - if ("${response.object.TOMCAT_VERSION}" != "9.0.71"):
        - setGlobals:
            jahiaRollingRedeployNeeded: true

  setNodeDistribution:
    environment.nodegroup.ApplyData [cp, bl, sqldb]:
        data:
          distribution:
            mode: SOFT
            zones:
              - az1: zoneA
                az2: zoneB
                az3: zoneC

settings:
  fields:
    - type: toggle
      name: disable_checks
      caption: disable all checks
