---
type: update
version: 1.5.2
name: Migrate Jahia env to v26
id: migrate-jahia-env-v26

# Required for healthchecks
mixins:
  - "../../../mixins/common.yml"
  - "../../../mixins/jahia.yml"
  - "../../../mixins/mariadb.yml"
  - "../../../mixins/haproxy.yml"
  - "../../../mixins/jcustomer.yml"
  - "../../../mixins/elasticsearch.yml"

globals:
  version: 26

onInstall:
  ### Pre-migration actions
  - checkEnvVersion: ${globals.version}
  - if(!${settings.disable_checks}):
      - preChecks
  - else:
      log: "pre migration checks are disabled"
  - eventsUpdate
  - setGlobalRepoRootUrl
  ### End pre-migration actions

  - addBlockMaliciousXForwardedFor           # PAAS-2335
  - upgradeSam                               # PAAS-2318
  - disableCloudModules                      # PAAS-2321
  - setNodeDistribution                      # PAAS-2291
  - updateGraphQL                            # PAAS-2372

  # Actions that require a restart

  # Actions that require a redeploy
  - upgradeTomcat                            # PAAS-2219

  # Redeploy and restart actions:
  - if ("${globals.jahiaRollingRedeployNeeded}" == "true"):
      - install:
          jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-redeploy.yml"
  - else:
      - if ("${globals.jahiaRollingRestartNeeded}" == "true"):
          - install:
              jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-restart.yml"

  ### Post-migration actions
  - setEnvVersion: ${globals.version}
  - if(!${settings.disable_checks}):
      - postChecks
  - else:
      log: "post migration checks are disabled"
  - logEvent:
      target: ${nodes.proc.first.id}
      title: "Environment $envName migrated"
      text: "Environment $envName migrated to v${globals.version}"
  ### End post-migration actions

actions:
  eventsUpdate:
    install:
      jps: "${baseUrl}../update-events.yml"

  preChecks:
    - checkJahiaHealth: "cp, proc"
    - checkJahiaDatadogCustomChecks: "cp, proc"
    - checkHaproxyHealth: bl
    - checkHaproxyDatadogCustomChecks: bl
    - checkMariadbHealth:
        target: sqldb
    - checkGaleraClusterHealth: sqldb
    - checkMariadbDatadogCustomChecks: sqldb

  postChecks:
    - checkJahiaHealth: "cp, proc"
    - checkJahiaDatadogCustomChecks: "cp, proc"
    - checkHaproxyHealth: bl
    - checkHaproxyDatadogCustomChecks: bl
    - checkMariadbHealth:
        target: sqldb
    - checkGaleraClusterHealth: sqldb
    - checkMariadbDatadogCustomChecks: sqldb

  addBlockMaliciousXForwardedFor:
    - cmd[bl]: |-
        if ! (grep -q "malicious forged" /etc/haproxy/haproxy.cfg.jahia/jahia-cloud.cfg); then
          curl -fLSso /tmp/haproxy-good_ip_forwarding_for.txt ${globals.repoRootUrl}/packages/jahia/migrations/v26_assets/haproxy-good_ip_forwarding_for.txt || exit 1
          sed -r -i /etc/haproxy/haproxy.cfg.jahia/jahia-cloud.cfg \
              -e '/^\s+http-response set-header X-Content-Type-Options "nosniff"/e cat /tmp/haproxy-good_ip_forwarding_for.txt'
          rm -f /tmp/haproxy-good_ip_forwarding_for.txt
          systemctl reload haproxy || exit 2
        fi

  upgradeSam:
    - getJahiaVersion
    - isVersionHigherOrEqual:
        a: ${globals.jahiaVersion}
        b: 8.1.2.0
        res: isHigherOrEqualThan8120
    - if (${globals.isHigherOrEqualThan8120}):
        - checkModule:
            moduleSymname: server-availability-manager
        - if ("${globals.runningVersion}" != "2.6.0"):
            - disableHaproxyHealthcheck
            - installOrUpgradeModule:
                moduleSymname: server-availability-manager
                moduleVersion: 2.6.0
                moduleGroupId: org.jahia.modules
                moduleRepository: jahia-releases
            - checkJahiaHealth: "cp, proc"
            - enableHaproxyHealthcheck

  upgradeTomcat:
    - api: env.control.GetContainerEnvVars
      nodeId: ${nodes.proc.first.id}
    - if ("${response.object.TOMCAT_VERSION}" != "9.0.71"):
        - setGlobals:
            jahiaRollingRedeployNeeded: true

  disableCloudModules:
    cmd[cp, proc]: |-
      filename=org.jahia.modules.modulemanager.configuration.constraints-cloud.yaml
      file=/data/digital-factory-data/karaf/etc/$filename
      if [ ! -f $file ]; then
        curl -fLSso $file ${globals.repoRootUrl}/packages/jahia/migrations/v26_assets/$filename || exit 1
        chown tomcat:tomcat $file
      fi

  setNodeDistribution:
    environment.nodegroup.ApplyData [cp, bl, sqldb]:
        data:
          distribution:
            mode: SOFT
            zones:
              - az1: zoneA
                az2: zoneB
                az3: zoneC

  updateGraphQL:
    - getJahiaVersion
    - isVersionBetween:
        lower: 8.1.1.0
        lower_may_equal: true
        version: ${globals.jahiaVersion}
        higher: 8.1.5.0
        higher_may_equal: true
        res: isBetween8110and8150
    - if( ${globals.isBetween8110and8150} ):
        - disableHaproxyHealthcheck  # upgrading graphql temporarily break the healthcheck
        - installOrUpgradeModule:
            moduleSymname: graphql-dxm-provider
            moduleVersion: 2.18.0
            moduleGroupId: org.jahia.modules
            moduleRepository: jahia-releases
        - enableHaproxyHealthcheck

settings:
  fields:
    - type: toggle
      name: disable_checks
      caption: disable all checks
