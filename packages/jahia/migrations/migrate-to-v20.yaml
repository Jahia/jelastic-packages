---
type: update
version: 1.5.2
name: Migrate Jahia env to v20
id: migrate-jahia-env-v20

# Required for healthchecks
mixins:
  - "../../../mixins/common.yml"
  - "../../../mixins/jahia.yml"
  - "../../../mixins/mariadb.yml"
  - "../../../mixins/haproxy.yml"
  - "../../../mixins/jcustomer.yml"
  - "../../../mixins/elasticsearch.yml"

globals:
  version: 20

onInstall:
  ### Pre-checks
  - checkEnvVersion: ${globals.version}
  - checkJahiaHealth: "cp, proc"
  - checkJahiaDatadogCustomChecks: "cp, proc"
  - checkHaproxyHealth: bl
  - checkHaproxyDatadogCustomChecks: bl
  - checkMariadbHealth:
      target: sqldb
  - checkGaleraClusterHealth: sqldb
  - checkMariadbDatadogCustomChecks: sqldb
  - eventsUpdate
  - setGlobalRepoRootUrl
  ### End Pre-checks

  - UseG1GC                           # PAAS-2199
  - addLocalRevisionsCustomCheck      # PAAS-2175

  # Restart action:
  - if ("${globals.jahiaRollingRestartNeeded}" == "true"):
      - install:
          jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-restart.yml"

  ### Post-actions
  - setEnvVersion: ${globals.version}
  - logEvent:
      target: ${nodes.proc.first.id}
      title: "Environment $envName migrated"
      text: "Environment $envName migrated to v${globals.version}"
  - checkJahiaHealth: "cp, proc"
  - checkJahiaDatadogCustomChecks: "cp, proc"
  - checkHaproxyHealth: bl
  - checkHaproxyDatadogCustomChecks: bl
  - checkMariadbHealth:
      target: sqldb
  - checkGaleraClusterHealth: sqldb
  - checkMariadbDatadogCustomChecks: sqldb
  ### End Post-actions

actions:
  eventsUpdate:
    install:
      jps: "${baseUrl}../update-events.yml"

  UseG1GC:
    - cmd[cp,proc]: |-
        if (grep -q UseParallelGC /opt/*maven*/bin/mvn); then
          sed -i '/^MAVEN_OPTS=-XX:+UseParallelGC$/d' -i /opt/*maven*/bin/mvn
        fi
        if (pgrep -u tomcat -f UseParallelGC > /dev/null); then
          newGCconf="-XX:+UseG1GC -XX:+DisableExplicitGC -XX:+UseStringDeduplication -XX:MaxTenuringThreshold=7"
          sed -e '/^JMX_OPTS=/d' \
              -e "s/-XX:+UseParallelGC/$newGCconf/" \
              -i /opt/tomcat/conf/tomcat-env.sh
          echo "restart"
        fi
    - if("${response.out}" == "restart"):
        - setGlobals:
            jahiaRollingRestartNeeded: true

  addLocalRevisionsCustomCheck:
    - generateNodesListFile
    - createDataDogUser
    - cmd[proc]: |-
        if [[ $(${globals.proxysql_cli} -Nse "select count(*) from mysql_users where username='datadog'") == 0 ]]; then
          ${globals.proxysql_cli} -e "INSERT INTO mysql_users (username,password,default_hostgroup,max_connections) VALUES ('datadog','${GALERA_DB_USER_DATADOG}',2,2)"
          ${globals.proxysql_cli} -e "LOAD MYSQL USERS TO RUNTIME"
          ${globals.proxysql_cli} -e "SAVE MYSQL USERS TO DISK"
        fi
        restart_dd=false
        for f in /etc/datadog-agent/checks.d/jahia_local_revisions_discrepancies.py \
                 /etc/datadog-agent/conf.d/jahia_local_revisions_discrepancies.yaml; do
          if [ ! -f $f ]; then
            curl -fSsLo $f ${globals.repoRootUrl}/packages/jahia/migrations/v${globals.version}_assets/$(basename $f) || exit 1
            chown dd-agent:dd-agent $f
            if (echo $f | grep -q 'yaml'); then
              sed "s/__PASSWORD__/${GALERA_DB_USER_DATADOG}/" -i $f
            fi
            restart_dd=true
          fi
        done
        if $restart_dd; then
          systemctl restart datadog-agent
        fi
      user: root
