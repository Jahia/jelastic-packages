---
type: update
version: 1.5.2
name: Migrate Jahia env to v32
id: migrate-jahia-env-v32

# Required for healthchecks
mixins:
  - "../../../mixins/common.yml"
  - "../../../mixins/jahia.yml"
  - "../../../mixins/mariadb.yml"
  - "../../../mixins/haproxy.yml"
  - "../../../mixins/elasticsearch.yml"

globals:
  version: 32
  ignoredModules: ""

onInstall:
  ### Pre-migration actions
  - checkEnvVersion: ${globals.version}
  - if(!${settings.disable_checks}):
      - preChecks
  - else:
      log: "pre migration checks are disabled"
  - eventsUpdate
  - setGlobalRepoRootUrl
  ### End pre-migration actions

  # Actions that update modules (needs to be done first)
  # (None)

  # Regular actions
  # (None)

  # Actions that require a restart
  - migrateDatastoreToGluster          # PAAS-2433

  # Actions that require a redeploy
  # (None)

  # Redeploy and restart actions:
  - if ("${globals.jahiaRollingRedeployNeeded}" == "true"):
      - install:
          jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-redeploy.yml"
  - else:
      - if ("${globals.jahiaRollingRestartNeeded}" == "true"):
          - install:
              jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-restart.yml"

  # Actions that can only run when the redeploy is done
  # (None)

  ### Post-migration actions
  - setEnvVersion: ${globals.version}
  - if(!${settings.disable_checks}):
      - postChecks
  - else:
      log: "post migration checks are disabled"
  - logEvent:
      target: ${nodes.proc.first.id}
      title: "Environment $envName migrated"
      text: "Environment $envName migrated to v${globals.version}"
  ### End post-migration actions

actions:
  eventsUpdate:
    install:
      jps: "${baseUrl}../update-events.yml"

  preChecks:
    - checkJahiaHealth: "cp, proc"
    - checkJahiaDatadogCustomChecks: "cp, proc"
    - checkHaproxyHealth: bl
    - checkHaproxyDatadogCustomChecks: bl
    - checkMariadbHealth:
        target: sqldb
    - checkGaleraClusterHealth: sqldb
    - checkMariadbDatadogCustomChecks: sqldb
    - dumpModules:
        operation: migration
        checkVersion: true

  postChecks:
    - checkJahiaHealth: "cp, proc"
    - checkJahiaDatadogCustomChecks: "cp, proc"
    - checkHaproxyHealth: bl
    - checkHaproxyDatadogCustomChecks: bl
    - checkMariadbHealth:
        target: sqldb
    - checkGaleraClusterHealth: sqldb
    - checkMariadbDatadogCustomChecks: sqldb
    - checkModulesAfterOperation:
        operation: migration
        ignoredModules: ${globals.ignoredModules}
        checkVersion: true

  migrateDatastoreToGluster:
  - cmd [proc]: |-
      if ! grep "jahia.jackrabbit.datastore.path" /opt/tomcat/webapps/ROOT/WEB-INF/etc/repository/jackrabbit/repository.xml; then
        echo "MIGRATE"
      elif ! strings /proc/$(pgrep -u tomcat)/environ | grep -q datastore; then
        echo "RESTART"
      fi
      exit 0
  - if ("${response.out}" == "MIGRATE"):
    - if (${settings.runDatastoreMigrationScript}):
        runMigrationScript
    - enableFullReadOnlyOnCluster
    - finishDatastoreMigration
  - elif ("${response.out}" == "RESTART"):
    - log: The datastore has already been migrated to the shared FS but Tomcat needs to be restarted
    - setGlobals:
        jahiaRollingRestartNeeded: true
  - else:
    - The datastore has already been migrated to the shared FS and it seems like Tomcat is already using it, nothing to do

  getCloudlets:
  - setGlobals:
      sqldbNewFlexibleCloudlets: 64
  - if (${nodes.sqldb.first.flexibleCloudlets} <= 40):
      setGlobals:
        sqldbNewFlexibleCloudlets: 20
  - elif (${nodes.sqldb.first.flexibleCloudlets} <= 64):
      setGlobals:
        sqldbNewFlexibleCloudlets: 48

  runMigrationScript:
  - cmd [proc]: |-
      if [ ! -d /share/datastore ]; then
        mkdir /share/datastore
        chown tomcat: /share/datastore
      fi
  - log: Download the migration script and the configuration file
  - cmd [proc]: |-
      cfgfile=db-to-vfs.yaml
      jarfile=jackrabbit-datastore-migration-0.1.5.jar
      [ -f /root/$jarfile ] || \
        curl -fLSso /root/$jarfile ${globals.repoRootUrl}/packages/jahia/migrations/v31-32_assets/$jarfile || exit 1
      [ -f /root/$cfgfile ] || \
        curl -fLSso /root/$cfgfile ${globals.repoRootUrl}/packages/jahia/migrations/v31-32_assets/$cfgfile || exit 1
      sed -e "s/\(\s*user: '\).*'/\1$DB_USER'/" \
          -e "s/\(\s*password: '\).*'/\1$DB_PASSWORD'/" \
          -i /root/$cfgfile || exit 1
  # If the environment has a Galera cluster, we target a slave DB node instead of using ProxySQL
  - if (nodes.sqldb.length > 1):
    - getGaleraMaster
    - forEach(nodes.sqldb):
      - getGaleraNodeNameIndex: ${@i.id}
      - if ("${globals.galeraNodeNameIndex}" != "${globals.galeraMasterIndex}"):
        - set:
            targetGaleraNodeName: ${globals.galeraNodeNameIndex}
    - cmd [proc]: |-
        sed "s;\(.*mysql://\).*\(/jahia\?.*\);\1${this.targetGaleraNodeName}:3306\2;" \
            -i /root/db-to-vfs.yaml
  - cmd [${nodes.storage.first.id}]: |-
      find /data/datastore -type f -printf "%f\n" > /data/existingIds.txt
  - log: Running the migration script
  - cmd [proc]: |-
      logfile=jackrabbit-datastore-migration-$(date "+%Y%m%d%H%M%S").log
      mv /share/existingIds.txt /tmp
      java -Dloader.path=/opt/tomcat/lib/ -jar jackrabbit-datastore-migration-0.1.5.jar --spring.config.location=db-to-vfs.yaml > $logfile
      exit_code=0
      if [ $? -ne 0 ]; then
        echo "The migration script failed, please check /root/$logfile"
        exit_code=1
      fi
      chown -R tomcat: /share/datastore
      rm -f /tmp/existingIds.txt
      exit $exit_code

  finishDatastoreMigration:
  - getCloudlets
  - runMigrationScript
  - if (${globals.sqldbNewFlexibleCloudlets} != ${nodes.sqldb.first.flexibleCloudlets}):
    - log: Decreasing the cloudlets for sqldb nodes
    - install:
        jps: "${globals.repoRootUrl}/packages/jahia/set-db-nodes-cloudlets.yml"
        settings:
          cloudlets: ${globals.sqldbNewFlexibleCloudlets}
  - log: Updating Jahia's configuration to use the datastore on the shared filesystem
  - env.control.AddContainerEnvVars [cp, proc]:
    vars:
      jahia_cfg_jahia_jackrabbit_datastore_path: /share/datastore
  - cmd[cp, proc]: |-
      newline1="   <param name=\"path\" value=\"\${jahia.jackrabbit.datastore.path}\" />"
      newline2="    <param name=\"minRecordLength\" value=\"1024\" />"
      sed -e "s/org\.apache\.jackrabbit\.core\.data\.db\.DbDataStore/org.apache.jackrabbit.core.data.FileDataStore/" \
          -e "/org.apache.jackrabbit.core.data.FileDataStore/{n;N;N;N;N;d}" \
          -e "/<\/DataStore>/i \ $newline1\n$newline2" \
          -i /opt/tomcat/webapps/ROOT/WEB-INF/etc/repository/jackrabbit/repository.xml || exit 1
  - setGlobals:
      jahiaRollingRestartNeeded: true


settings:
  fields:
    - type: toggle
      name: disable_checks
      caption: disable all checks
    - type: toggle
      name: runDatastoreMigrationScriptPreFRO
      caption: Run the datastore migration script before enabling the FRO mode
      value: true # This is the default value so it should be set to false for non-prod environments
