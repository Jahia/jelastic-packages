---
type: update
version: 1.5.2
name: Migrate Jahia env to v45
id: migrate-jahia-env-v45

# Required for healthchecks
mixins:
  - "../../../mixins/common.yml"
  - "../../../mixins/jahia.yml"
  - "../../../mixins/mariadb.yml"
  - "../../../mixins/haproxy.yml"
  - "../../../mixins/elasticsearch.yml"

globals:
  version: 45
  ignoredModules: "distributed-sessions,jahia-ui-root,jahia-page-composer,jahia-dashboard,jahia-administration,content-editor,jcontent,app-shell,graphql-dxm-provider,site-settings-seo,forms-core"

onInstall:
  ### Pre-migration actions
  - checkEnvProvides: jahia
  - if(!${settings.force}):
      - checkEnvVersion: ${globals.version}
  - if(!${settings.disable_checks}):
      - preChecks
  - else:
      log: "pre migration checks are disabled"
  - eventsUpdate
  - setGlobalRepoRootUrl
  ### End pre-migration actions

  # Actions that update modules (needs to be done first)
  - updateFormsCore                               # PAAS-3213
  - updateDistributedSession                      # PAAS-3148
  - updateModules                                 # PAAS-3105

  # Regular actions
  - fixTomcatEnvFile                              # PAAS-3135
  - removeRobotsTXTFromHaproxyConfig              # PAAS-3109
  - disableEpelRepository                         # PAAS-3172
  - updateClassesDumpGeneration                   # PAAS-3167

  # Actions that require a restart
  - fixSetenvOn82                                 # PAAS-3151

  # Actions that require a redeploy
  - upgradeHaproxy                                # PAAS-3119

  # Redeploy and restart actions
  - if ("${globals.jahiaRollingRedeployNeeded}" == "true"):
      - install:
          jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-redeploy.yml"
  - else:
      - if ("${globals.jahiaRollingRestartNeeded}" == "true"):
          - install:
              jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-restart.yml"

  # Actions that can only run when the redeploy is done
  # (None)

  ### Post-migration actions
  - setEnvVersion: ${globals.version}
  - if(!${settings.disable_checks}):
      - postChecks
  - else:
      log: "post migration checks are disabled"
  - logEvent:
      target: ${nodes.proc.first.id}
      title: "Environment $envName migrated"
      text: "Environment $envName migrated to v${globals.version}"
  ### End post-migration actions

actions:
  eventsUpdate:
    install:
      jps: "${baseUrl}../update-events.yml"

  preChecks:
    - checkJahiaHealth:
        target: "cp, proc"
    - checkJahiaDatadogCustomChecks: "cp, proc"
    - checkHaproxyHealth: bl
    - checkHaproxyDatadogCustomChecks: bl
    - checkMariadbHealth:
        target: sqldb
    - checkGaleraClusterHealth: sqldb
    - checkMariadbDatadogCustomChecks: sqldb
    - dumpModules:
        operation: migration
        checkVersion: true
    - checkExternalDomains:
        outputFilePath: "/var/tmp/cloud/domains_check/beforeMigrateToV${globals.version}"

  postChecks:
    - checkJahiaHealth:
        target: "cp, proc"
    - checkJahiaDatadogCustomChecks: "cp, proc"
    - checkHaproxyHealth: bl
    - checkHaproxyDatadogCustomChecks: bl
    - checkMariadbHealth:
        target: sqldb
    - checkGaleraClusterHealth: sqldb
    - checkMariadbDatadogCustomChecks: sqldb
    - checkModulesAfterOperation:
        operation: migration
        ignoredModules: ${globals.ignoredModules}
        checkVersion: true
    - checkExternalDomainsAfterMigration:
        outputFilePath: "/var/tmp/cloud/domains_check/afterMigrateToV${globals.version}"

  upgradeHaproxy:
    - setGlobals:
        haproxyVersion: "2.8.11-almalinux-9"
    - foreach (nodes.bl):
      - if ("${@i.version}" != "${globals.haproxyVersion}"):
        - api: environment.control.RedeployContainerById
          nodeId: ${@i.id}
          tag: ${globals.haproxyVersion}
          useExistingVolumes: true
          skipReinstall: false
          envName: ${env.envName}
    - environment.nodegroup.ApplyData [bl]:
      data:
        productName: haproxy
        productVersion: ${globals.haproxyVersion}

  updateModules:
      - disableHaproxyHealthcheck
      # Install modules with a single version available
      - set:
          modules: [
            {"name": "jahia-ui-root", "version":"1.10.0"},
            {"name": "jahia-page-composer", "version":"1.12.0"},
            {"name": "jahia-dashboard", "version":"1.10.0"},
            {"name": "jahia-administration", "version":"1.11.0"}
            ]
      - forEach(this.modules):
          - checkModule:
              moduleSymname: ${@i.name}
          - if ("${globals.runningVersion}" != "${@i.version}"):
                  - installOrUpgradeModules:
                      modules: ${@i.name}/${@i.version}
      - checkModule:
          moduleSymname: site-settings-seo
      - if ("${globals.installedVersionsCount}" != ""):
          - if (${fn.compare([globals.runningVersion], 4.4.0)} < 0):
              - installOrUpgradeModules:
                  modules: site-settings-seo/4.4.0
      # Install modules with multiple versions available
      - checkModule:
          moduleSymname: app-shell
      - if (${fn.compare([globals.runningVersion], 3.0.0)} < 0):
          set: {"version":"2.10.0"}
      - else:
          set: {"version":"3.2.0"}
      - if ("${globals.runningVersion}" != "${this.version}"):
          - installOrUpgradeModules:
              modules: app-shell/${this.version}
      - checkModule:
          moduleSymname: jcontent
      # Only upgrade jcontent if 2.X installed
      - if (${fn.compare([globals.runningVersion], 3.0.0)} < 0):
          ##################################################################
          # Version changed (was 2.17.0) in the middle of the release      #
          # for production environments                                    #
          # Already migrated environments will be patched with a one shot  #
          # package (PAAS-3212)                                            #
          # ################################################################
          set: {"version":"2.18.0"}
      - if ("${globals.runningVersion}" != "${this.version}"):
          - installOrUpgradeModules:
              modules: jcontent/${this.version}
      # Update graphql-dxm-provider if 2.X installed
      - checkModule:
          moduleSymname: graphql-dxm-provider
      - if (${fn.compare([globals.runningVersion], 3.0.0)} < 0):
          - if ("${globals.runningVersion}" != "2.21.0"):
              - installOrUpgradeModules:
                  modules: graphql-dxm-provider/2.21.0
              - checkJahiaHealth:
                  target: "cp, proc"
                  singleCheck: false
                  timeout: 180
      # Finish with content-editor to avoid any dependency issue
      - checkModule:
          moduleSymname: content-editor
      # Make sure it is installed, as it's optional in 8.2.X
      - if ("${globals.installedVersionsCount}" != ""):
          - if (${fn.compare([globals.runningVersion], 4.0.0)} < 0):
              set: {"version":"3.8.0"}
          - else:
              set: {"version":"4.11.0"}
          - if ("${globals.runningVersion}" != "${this.version}"):
              - installOrUpgradeModules:
                  modules: content-editor/${this.version}
      - enableHaproxyHealthcheck

  fixTomcatEnvFile:
    - cmd[cp, proc]: |-
        setenv=/opt/tomcat/bin/setenv.sh
        tomcatenv=/opt/tomcat/conf/tomcat-env.sh
        if [ ! -L $setenv ]; then
          mv -f $setenv $tomcatenv
          ln -s $tomcatenv $setenv
        fi

  fixSetenvOn82:
    - getJahiaVersion
    - isVersionHigherOrEqual:
        a: ${globals.jahiaVersion}
        b: 8.2.0.0
        res: jahia82
    - if(${globals.jahia82}):
        - cmd[proc,cp]: |-
            current_line_hash=$(grep ^JAVA_HOME  /opt/tomcat/bin/setenv.sh | md5sum - | awk '{print $1}')
            if [[ $current_line_hash != 2d27cde66c361163eb36091134422a85 ]]; then
              sed -r 's/^(JAVA_HOME)=.*/\1="$(dirname $(dirname $(readlink -f \/etc\/alternatives\/java)))"/' \
                  -i /opt/tomcat/bin/setenv.sh --follow-symlinks
              echo "to_restart"
            fi
        - if("${response.out}" == "to_restart"):
            - setGlobals:
                jahiaRollingRestartNeeded: true

  removeRobotsTXTFromHaproxyConfig:
    cmd[bl]: |-
      if (grep -q robot /etc/haproxy/haproxy.cfg.jahia/jahia-cloud.cfg); then
        sed -i '/acl is_robot/,+5d' /etc/haproxy/haproxy.cfg.jahia/jahia-cloud.cfg
        rm -f /etc/haproxy/robots_noindex.txt
        systemctl reload haproxy
      fi

  updateDistributedSession:
    - getJahiaVersion
    - isVersionHigherOrEqual:
        a: ${globals.jahiaVersion}
        b: 8.1.5.0
        res: isHigherOrEqualThan815
    - if (${globals.isHigherOrEqualThan815}):
        - checkModule:
            moduleSymname: distributed-sessions
        - if ("${globals.moduleState}" == "started" && "${globals.runningVersion}" != "4.2.0"):
            - installOrUpgradeModules:
                modules: distributed-sessions/4.2.0

  disableEpelRepository:
    cmd[sqldb,storage]:
      dnf config-manager --disable epel

  updateClassesDumpGeneration:
    - api: env.control.GetContainerEnvVarsByGroup
      envName: ${env.envName}
      nodeGroup: cp
    - set:
        dumpJavaClasses: ${response.object.DUMP_JAVA_CLASSES:false}
    - env.control.AddContainerEnvVars [cp, proc]:
      vars:
        DUMP_JAVA_CLASSES: ${this.dumpJavaClasses}
    - cmd [cp, proc]: |-
        md5="3517eac528da69d51562b7866d4118c4"
        script_name=thread-dump.sh
        script_path=/usr/local/bin/$script_name
        dumps_path=$DUMPS_PATH
        [ -z $dumps_path ] && dumps_path=/var/tmp/cloud
        if ! (echo "$md5 $script_path" | md5sum --status -c); then
          curl -fSsLo $script_path ${globals.repoRootUrl}/packages/jahia/migrations/v${globals.version}_assets/$script_name || exit 1
          chmod +x $script_path
        fi
        $DUMP_JAVA_CLASSES || rm -rf ${dumps_path}/classes_dumps/*

  updateFormsCore:
    ##################################################################
    # Added in the middle of the release for production environments #
    # Already migrated environments will be patched with a one shot  #
    # package (PAAS-3212)                                            #
    # ################################################################
    - checkModule:
        moduleSymname: forms-core
    - if ("${globals.moduleState}" == "started"):
        - isVersionHigherOrEqual:
              a: "${globals.runningVersion}"
              b: "3.14.0"
              res: moduleIsUpToDate
        - if (! ${globals.moduleIsUpToDate}):
            installOrUpgradeModules:
                  modules: forms-core/3.15.0

settings:
  fields:
    - type: toggle
      name: disable_checks
      caption: Disable checks
      tooltip: Disable post and pre checks
    - type: toggle
      name: force
      caption: Force migration
      tooltip: Apply the migration even if env_version is up-to-date
