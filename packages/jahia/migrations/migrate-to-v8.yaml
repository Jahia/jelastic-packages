---
type: update
version: 1.5.2
name: Migrate Jahia env to v8
id: migrate-jahia-env-v8

# Required for healthchecks
mixins:
  - "../../../mixins/common.yml"
  - "../../../mixins/jahia.yml"
  - "../../../mixins/mariadb.yml"
  - "../../../mixins/haproxy.yml"
  - "../../../mixins/jcustomer.yml"

globals:
  version: 8

onInstall:
  ### Pre-checks
  - checkEnvVersion: ${globals.version}
  - checkJahiaHealth: "cp, proc"
  - checkHaproxyHealth: bl
  - checkMariadbHealth: sqldb
  - checkGaleraClusterHealth: sqldb
  - eventsUpdate
  - setGlobalRepoRootUrl
  ### End Pre-checks

  - addHaproxyNodesCountOnJahiaNodes                       # PAAS-1674
  - enableGCMetricsOnJahiaNodes                            # PAAS-1664
  - fixTomcatInitScript                                    # PAAS-1685
  - addMaxPostSize                                         # PAAS-1579
  - addGaleraNodeCustomCheck                               # PAAS-1677
  - setOrganizationNameEnvVar: bl, cp, proc, sqldb         # PAAS-1631
  - addHAProxyReturnErrorScript                            # PAAS-1575

  ### Post-actions
  - setEnvVersion: ${globals.version}
  - logEvent:
      target: ${nodes.proc.first.id}
      title: "Environment $envName migrated"
      text: "Environment $envName migrated to v${globals.version}"
  - checkJahiaHealth: "cp, proc"
  - checkHaproxyHealth: bl
  - checkMariadbHealth: sqldb
  - checkGaleraClusterHealth: sqldb
  ### End Post-actions

actions:
  eventsUpdate:
    install:
      jps: "${baseUrl}../update-events.yml"

  addHaproxyNodesCountOnJahiaNodes:
    - env.control.AddContainerEnvVars[cp, proc]:
      vars: {"HAPROXY_NODES_COUNT": "${nodes.bl.length}"}
    - cmd[cp, proc]: |-
        target=/etc/datadog-agent/checks.d/jahia_node_not_in_haproxy_pool.py
        curl -fLSso $target ${baseUrl}v8_assets/jahia_node_not_in_haproxy_pool.py || exit 1
        chown dd-agent: $target
        service datadog-agent restart
      user: root

  enableGCMetricsOnJahiaNodes:
    - cmd[cp,proc]: |-
        CONF_FILE=/etc/datadog-agent/conf.d/tomcat.d/conf.yaml
        LINE_TO_ADD="new_gc_metrics: true"
        if ( grep -q "$LINE_TO_ADD" $CONF_FILE ); then
          echo "[INFO] Config is already updated"
          exit 0
        fi
        sed -i "/init_config/a\ \ \ \ $LINE_TO_ADD" $CONF_FILE
        systemctl restart datadog-agent
      user: root

  fixTomcatInitScript:
    - cmd[cp, proc]: |-
        sed -e '/^\s\+JVM_PID=/,/^}$/!b' -e '/^}$/!d;i \    JVM_PID="$(pgrep -f "jvm=$JVM_ID" | head -n 1)"' -i /etc/init.d/tomcat
      user: root

  addMaxPostSize:
    - env.control.AddContainerEnvVars[cp, proc]:
      vars: {"tomcat_cfg_maxpostsize": "2097152"}
    - cmd[cp, proc]: |-
        sed -i -E '/^JAVA_OPTS/ s/(.)$/ -DmaxPostSize=${tomcat_cfg_maxpostsize}\1/g' /opt/tomcat/conf/tomcat-env.sh
        sed -i '/Connector port="80"/a \               maxPostSize="${maxPostSize}"' /opt/tomcat/conf/server.xml
      user: root

  addGaleraNodeCustomCheck:
    - cmd[sqldb]: |-
        custom_check_script=/etc/datadog-agent/checks.d/check_galera_wsrep_ready_status.py
        custom_check_config=/etc/datadog-agent/conf.d/check_galera_wsrep_ready_status.yaml
        curl -fLSso $custom_check_script ${globals.repoRootUrl}/assets/database/check_galera_wsrep_ready_status.py || exit 1
        chown dd-agent: $custom_check_script
        ln -s /etc/datadog-agent/conf.d/mysql.d/conf.yaml $custom_check_config
        chown -h dd-agent: $custom_check_config
        systemctl restart datadog-agent
      user: root

  setOrganizationNameEnvVar:
    - if (!globals.organization_name):
        - script: |
            return {"result": 0, "orgname": "${user.email}".split('@')[0]}
        - setGlobals:
            organization_name: ${response.orgname}
    - env.control.AddContainerEnvVars[${this}]:
      vars: {"ORGANIZATION_NAME": "${globals.organization_name}"}

  addHAProxyReturnErrorScript:
    - cmd[bl]: |-
        HAPROXY_RELOAD=/usr/local/bin/haproxy-reload.sh
        curl -fLSso $HAPROXY_RELOAD ${globals.repoRootUrl}/assets/haproxy/haproxy-reload.sh || exit 1
        chmod +x $HAPROXY_RELOAD
      user: root
