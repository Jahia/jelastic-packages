---
type: update
version: 1.5.2
name: Migrate Jahia env to v10
id: migrate-jahia-env-v10

# Required for healthchecks
mixins:
  - "../../../mixins/common.yml"
  - "../../../mixins/jahia.yml"
  - "../../../mixins/mariadb.yml"
  - "../../../mixins/haproxy.yml"
  - "../../../mixins/jcustomer.yml"

globals:
  version: 10

onInstall:
  ### Pre-checks
  - checkEnvVersion: ${globals.version}
  - checkJahiaHealth: "cp, proc"
  - checkJahiaDatadogCustomChecks: "cp, proc"
  - checkHaproxyHealth: bl
  - checkHaproxyDatadogCustomChecks: bl
  - checkMariadbHealth: sqldb
  - checkGaleraClusterHealth: sqldb
  - checkMariadbDatadogCustomChecks: sqldb
  - eventsUpdate
  - setGlobalRepoRootUrl
  ### End Pre-checks

  - updateEnvFileSource: cp, proc, bl, sqldb             # PAAS-1772
  - replaceAuthBasicEnabledEnvvar                        # PAAS-1815
  - removeHTTPHeader: bl                                 # PAAS-1805


  ### Post-actions
  - setEnvVersion: ${globals.version}
  - logEvent:
      target: ${nodes.proc.first.id}
      title: "Environment $envName migrated"
      text: "Environment $envName migrated to v${globals.version}"
  - checkJahiaHealth: "cp, proc"
  - checkJahiaDatadogCustomChecks: "cp, proc"
  - checkHaproxyHealth: bl
  - checkHaproxyDatadogCustomChecks: bl
  - checkMariadbHealth: sqldb
  - checkGaleraClusterHealth: sqldb
  - checkMariadbDatadogCustomChecks: sqldb
  ### End Post-actions

actions:
  eventsUpdate:
    install:
      jps: "${baseUrl}../update-events.yml"

  updateEnvFileSource:
    cmd[${this}]: |-
      OLD="source /.jelenv"
      NEW="source /etc/profile"
      tomcat_env=/opt/tomcat/conf/tomcat-env.sh
      log_event=/usr/local/bin/log_event.sh
      if [ -f $tomcat_env ]; then
        sed -i "s|$OLD|$NEW|" $tomcat_env $log_event
      else
        sed -i "s|$OLD|$NEW|" $log_event
      fi
    user: root

  replaceAuthBasicEnabledEnvvar:
    # Check if basic auth is enabled
    - api: env.control.GetContainerEnvVarsByGroup
      nodeGroup: proc
    - if ("${response.object.auth_basic_enabled}" == "true"):
        # Set "basicAuthEnabled" node group data
        - environment.nodegroup.ApplyData [proc, cp]:
            data:
              basicAuthEnabled: true
    # Remove "auth_basic_enabled" envvar
    - env.control.RemoveContainerEnvVars [proc, cp]:
        vars: ["auth_basic_enabled"]
    
  removeHTTPHeader:
    cmd[${this}]: |-
      line_to_remove='    http-response set-header Strict-Transport-Security "max-age=63072000;"'
      haproxy_conf="/etc/haproxy/haproxy.cfg.jahia/jahia-cloud.cfg"
      if ( ! grep -qPzo "$line_to_remove" $haproxy_conf ); then
        echo "[INFO] No header to remove."
        exit 0
      fi
      sed -i "/$line_to_remove/d" $haproxy_conf
      service haproxy reload
    user: root
