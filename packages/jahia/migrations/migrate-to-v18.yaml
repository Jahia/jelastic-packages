---
type: update
version: 1.5.2
name: Migrate Jahia env to v18
id: migrate-jahia-env-v18

# Required for healthchecks
mixins:
  - "../../../mixins/common.yml"
  - "../../../mixins/jahia.yml"
  - "../../../mixins/mariadb.yml"
  - "../../../mixins/haproxy.yml"
  - "../../../mixins/jcustomer.yml"
  - "../../../mixins/elasticsearch.yml"

globals:
  version: 18

onInstall:
  ### Pre-checks
  - checkEnvVersion: ${globals.version}
  - checkJahiaHealth: "cp, proc"
  - checkJahiaDatadogCustomChecks: "cp, proc"
  - checkHaproxyHealth: bl
  - checkHaproxyDatadogCustomChecks: bl
  - checkMariadbHealth:
      target: sqldb
  - checkGaleraClusterHealth: sqldb
  - checkMariadbDatadogCustomChecks: sqldb
  - eventsUpdate
  - setGlobalRepoRootUrl
  ### End Pre-checks

  - upgradeSam                        # PAAS-2131
  - upgradePat                        # PAAS-2144
  - installScreeb                     # PAAS-2084

  # Actions that require a restart:
  - increaseMaxAge                    # PAAS-2132

  # Restart action:
  - if ("${globals.jahiaRollingRestartNeeded}" == "true"):
    - install:
        jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-restart.yml"

  ### Post-actions
  - setEnvVersion: ${globals.version}
  - logEvent:
      target: ${nodes.proc.first.id}
      title: "Environment $envName migrated"
      text: "Environment $envName migrated to v${globals.version}"
  - checkJahiaHealth: "cp, proc"
  - checkJahiaDatadogCustomChecks: "cp, proc"
  - checkHaproxyHealth: bl
  - checkHaproxyDatadogCustomChecks: bl
  - checkMariadbHealth:
      target: sqldb
  - checkGaleraClusterHealth: sqldb
  - checkMariadbDatadogCustomChecks: sqldb
  ### End Post-actions

actions:
  eventsUpdate:
    install:
      jps: "${baseUrl}../update-events.yml"

  upgradeSam:
    - getJahiaVersion
    - isVersionHigherOrEqual:
        a: ${globals.jahiaVersion}
        b: 8.1.2.0
        res: isHigherOrEqualThan8120
    - if (${globals.isHigherOrEqualThan8120}):
        - checkModule:
            moduleSymname: server-availability-manager
        - if ("${globals.runningVersion}" != "2.2.0"):
            - disableHaproxyHealthcheck
            - installOrUpgradeModule:
                moduleSymname: server-availability-manager
                moduleVersion: 2.2.0
                moduleGroupId: org.jahia.modules
                moduleRepository: jahia-releases
            - checkJahiaHealth
            - enableHaproxyHealthcheck

  upgradePat:
    - getJahiaVersion
    - isVersionBetween:
        lower: 8.1.0.0
        lower_may_equal: true
        version: ${globals.jahiaVersion}
        higher: 8.1.2.2
        higher_may_equal: true
        res: isBetween8100and8122
    - if( ${globals.isBetween8100and8122} ):
        # First, we need to upgrade jahia-dashboard to 1.6.0 (dependency)
        - checkModule:
            moduleSymname: jahia-dashboard
        - if( ${fn.compare([globals.runningVersion], 1.6.0)} < 0 ):
            - installOrUpgradeModule:
                moduleSymname: jahia-dashboard
                moduleVersion: 1.6.0
                moduleGroupId: org.jahia.modules
                moduleRepository: jahia-releases
        # Upgrade personal-api-tokens to 1.2.0
        - checkModule:
            moduleSymname: personal-api-tokens
        - if ("${globals.runningVersion}" != "1.2.0"):
            - installOrUpgradeModule:
                moduleSymname: personal-api-tokens
                moduleVersion: 1.2.0
                moduleGroupId: org.jahia.modules
                moduleRepository: jahia-releases

  increaseMaxAge:
    - cmd[proc, cp]: |-
        restart="false"
        if ( grep -q 'maxAge="3' /opt/tomcat/webapps/ROOT/META-INF/context.xml ); then
          restart="true"
          sed -i 's/maxAge="300000/maxAge="900000/g' /opt/tomcat/webapps/ROOT/META-INF/context.xml
        fi
        echo $restart

    - if (${response.out}):
        setGlobals:
          jahiaRollingRestartNeeded: true

  installScreeb:
    - getJahiaVersion
    - isVersionHigherOrEqual:
        a: ${globals.jahiaVersion}
        b: 8.0.0.0
        res: jahia8
    - if (${globals.jahia8}):
        - installModule:
            moduleSymname: jahia-user-feedbacks
            moduleVersion: 1.1.0
            moduleGroupId: org.jahia.modules
            moduleRepository: jahia-releases
        - cmd[proc]: |-
            config_file="/data/digital-factory-data/karaf/etc/org.jahia.services.env.cfg"
            if [ ! -f $config_file ]; then
              organization=$(echo "${user.email}" | cut -d'@' -f1)
              env_name=${env.envName}
              touch $config_file
              echo "org.jahia.services.env.organization=${organization}" >> $config_file
              echo "org.jahia.services.env.env_name=${env_name}" >> $config_file
            fi
