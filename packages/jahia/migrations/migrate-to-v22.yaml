---
type: update
version: 1.5.2
name: Migrate Jahia env to v22
id: migrate-jahia-env-v22

# Required for healthchecks
mixins:
  - "../../../mixins/common.yml"
  - "../../../mixins/jahia.yml"
  - "../../../mixins/mariadb.yml"
  - "../../../mixins/haproxy.yml"
  - "../../../mixins/jcustomer.yml"
  - "../../../mixins/elasticsearch.yml"

globals:
  version: 22

onInstall:
  ### Pre-checks
  - checkEnvVersion: ${globals.version}
  - checkJahiaHealth: "cp, proc"
  - checkJahiaDatadogCustomChecks: "cp, proc"
  - checkHaproxyHealth: bl
  - checkHaproxyDatadogCustomChecks: bl
  - checkMariadbHealth:
      target: sqldb
  - checkGaleraClusterHealth: sqldb
  - checkMariadbDatadogCustomChecks: sqldb
  - eventsUpdate
  - setGlobalRepoRootUrl
  ### End Pre-checks

  - increaseJahia8LogsMaxLineSize       # PAAS-2200
  - upgradeAugmentedSearch              # PAAS-2267

  # Actions that require a restart
  - updateJDBCConfForLongConnections    # PAAS-2265

  # Restart action:
  - if ("${globals.jahiaRollingRestartNeeded}" == "true"):
      - install:
          jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-restart.yml"

  ### Post-actions
  - setEnvVersion: ${globals.version}
  - logEvent:
      target: ${nodes.proc.first.id}
      title: "Environment $envName migrated"
      text: "Environment $envName migrated to v${globals.version}"
  - checkJahiaHealth: "cp, proc"
  - checkJahiaDatadogCustomChecks: "cp, proc"
  - checkHaproxyHealth: bl
  - checkHaproxyDatadogCustomChecks: bl
  - checkMariadbHealth:
      target: sqldb
  - checkGaleraClusterHealth: sqldb
  - checkMariadbDatadogCustomChecks: sqldb
  ### End Post-actions

actions:
  eventsUpdate:
    install:
      jps: "${baseUrl}../update-events.yml"

  increaseJahia8LogsMaxLineSize:
    - getJahiaVersion
    - isVersionHigherOrEqual:
        a: ${globals.jahiaVersion}
        b: 8.1.0.0
        res: log4j2
    - if (${globals.log4j2}):
        - cmd[cp,proc]: |-
            sed -r 's|(\{%\.-)[0-9]+(m\})|\12000\2|' \
                -i /opt/tomcat/webapps/ROOT/WEB-INF/etc/config/log4j2.xml

  updateJDBCConfForLongConnections:
    - cmd[cp,proc]: |-
        file=/opt/tomcat/webapps/ROOT/META-INF/context.xml
        if (! grep abandonWhenPercentageFull $file); then
          sed -i '/removeAbandoned="true"/a \    jdbcInterceptors="org.apache.tomcat.jdbc.pool.interceptor.ResetAbandonedTimer"' $file
          sed -i '/removeAbandoned="true"/a \    abandonWhenPercentageFull="80"' $file
          echo "restart"
        else
          echo "JDBC configuration alreay up to date"
        fi
        sed -i 's/max_connections = 50/max_connections = 100/' /etc/proxysql.cnf
      user: root
    - cmd[proc]: |-
        ${globals.proxysql_cli} -e "update mysql_servers set max_connections=100"
        ${globals.proxysql_cli} -e "LOAD MYSQL SERVERS TO RUNTIME;"
        ${globals.proxysql_cli} -e "SAVE MYSQL SERVERS TO DISK"
      user: root
    - if("${response.out}" == "restart"):
        - setGlobals:
            jahiaRollingRestartNeeded: true

  upgradeAugmentedSearch:
    - isAugSearchEnabled
    - if (${globals.isAugSearchEnabled}):
        - getJahiaVersion
        - isVersionHigherOrEqual:
            a: ${globals.jahiaVersion}
            b: 8.0.0.0
            res: jahia8
        - if (${globals.jahia8}):
            installOrUpgradeModule:
              moduleSymname: augmented-search
              moduleVersion: 3.4.0
              moduleGroupId: org.jahia.modules
              moduleRepository: augmented-search-releases
              startModule: true
        - else:
            installOrUpgradeModule:
              moduleSymname: augmented-search
              moduleVersion: 1.7.0
              moduleGroupId: org.jahia.modules
              moduleRepository: augmented-search-releases
              startModule: true
