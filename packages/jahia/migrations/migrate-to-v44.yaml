---
type: update
version: 1.5.2
name: Migrate Jahia env to v44
id: migrate-jahia-env-v44

# Required for healthchecks
mixins:
  - "../../../mixins/common.yml"
  - "../../../mixins/jahia.yml"
  - "../../../mixins/mariadb.yml"
  - "../../../mixins/haproxy.yml"
  - "../../../mixins/elasticsearch.yml"

globals:
  version: 44

onInstall:
  ### Pre-migration actions
  - checkEnvProvides: jahia
  - checkEnvVersion: ${globals.version}
  - if(!${settings.disable_checks}):
      - preChecks
  - else:
      log: "pre migration checks are disabled"
  - eventsUpdate
  - setGlobalRepoRootUrl
  ### End pre-migration actions

  # Actions that update modules (needs to be done first)

  # Regular actions
  - installTelnet                                     # PAAS-3055
  - captureCookiesInHaproxy                           # PAAS-3036
  - addCustomSshConfForKarafConsole                   # PAAS-3008
  - updateStorageNodesCloudlets                       # PAAS-2673
  - enablePageComposerForJahia82                      # PAAS-3012
  - addClassesDumps                                   # PAAS-3033

  # Actions that require a restart
  - setXmxRamRatio                                    # PAAS-2584

  # Actions that require a redeploy

  # Redeploy and restart actions:

  - if ("${globals.jahiaRollingRedeployNeeded}" == "true"):
      - install:
          jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-redeploy.yml"
  - else:
      - if ("${globals.jahiaRollingRestartNeeded}" == "true"):
          - install:
              jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-restart.yml"

  # Actions that can only run when the redeploy is done
  # (None)

  ### Post-migration actions
  - setEnvVersion: ${globals.version}
  - if(!${settings.disable_checks}):
      - postChecks
  - else:
      log: "post migration checks are disabled"
  - logEvent:
      target: ${nodes.proc.first.id}
      title: "Environment $envName migrated"
      text: "Environment $envName migrated to v${globals.version}"
  ### End post-migration actions

actions:
  eventsUpdate:
    install:
      jps: "${baseUrl}../update-events.yml"

  preChecks:
    - checkJahiaHealth: "cp, proc"
    - checkJahiaDatadogCustomChecks: "cp, proc"
    - checkHaproxyHealth: bl
    - checkHaproxyDatadogCustomChecks: bl
    - checkMariadbHealth:
        target: sqldb
    - checkGaleraClusterHealth: sqldb
    - checkMariadbDatadogCustomChecks: sqldb
#    - checkDatadogBrowserTests
    - dumpModules:
        operation: migration
        checkVersion: true

  postChecks:
    - checkJahiaHealth: "cp, proc"
    - checkJahiaDatadogCustomChecks: "cp, proc"
    - checkHaproxyHealth: bl
    - checkHaproxyDatadogCustomChecks: bl
    - checkMariadbHealth:
        target: sqldb
    - checkGaleraClusterHealth: sqldb
    - checkMariadbDatadogCustomChecks: sqldb
#    - checkDatadogBrowserTests:
#        postCheck: true
    - checkModulesAfterOperation:
        operation: migration
        ignoredModules: ${globals.ignoredModules}
        checkVersion: true

  installTelnet :
    - cmd[cp, proc]: |-
        if ! (rpm -q telnet) > /dev/null; then
          yum install -y telnet
        fi

  captureCookiesInHaproxy:
    - cmd[bl]: |-
        f=/etc/haproxy/haproxy.cfg.jahia/jahia-cloud.cfg
        if ! (grep -q "capture request header" $f); then
          sed -i '/capture response header/i\ \ \ \ capture cookie "SERVERID" len 20' $f
          sed -i '/capture response header/i\ \ \ \ capture request header User-Agent len 500' $f
          systemctl reload haproxy
        fi

  addCustomSshConfForKarafConsole:
    - cmd[cp, proc]: |-
        if [ ! -f /root/karaf_openssl.cnf ]; then
          curl -fLSso /root/karaf_openssl.cnf ${globals.repoRootUrl}/packages/jahia/migrations/v${globals.version}_assets/karaf_openssl.cnf
        fi

  updateStorageNodesCloudlets:
    - if(${nodes.sqldb.first.flexibleCloudlets} == 20) && (${nodes.storage.first.flexibleCloudlets} != 6):
        # If small DB and not small storage node, we resize storage nodes to small
        - install:
          jps: "${globals.repoRootUrl}/packages/common/manage-cloudlets.yml"
          settings:
            cloudlets: 6
            nodeGroup: storage
            forceRestart: false

  enablePageComposerForJahia82:
    - getJahiaVersion
    - isVersionHigherOrEqual:
        a: ${globals.jahiaVersion}
        b: 8.2.0.0
        res: isHigherOrEqual8200
    - if( ${globals.isHigherOrEqual8200} ):
        - callProvisioningAPI:
            target: proc
            payload:
              - editConfiguration: "org.jahia.modules.jcontent"
                properties:
                  hideLegacyPageComposer: "false"
                  showPageBuilder: "true"

  addClassesDumps:
    - cmd [cp, proc]: |-
        md5="9d2ffbd28c43fd45f79194bd1b7bacd4"
        script_name=thread-dump.sh
        script_path=/usr/local/bin/$script_name
        if ! (echo "$md5 $script_path" | md5sum --status -c); then
          curl -fSsLo $script_path ${globals.repoRootUrl}/packages/jahia/migrations/v${globals.version}_assets/$script_name || exit 1
          chmod +x $script_path
        fi
      user: root

  setXmxRamRatio:
    - api: env.control.GetContainerEnvVarsByGroup
      nodeGroup: proc
    - if ("${nodes.proc.first.flexibleCloudlets}" == "80") && ("${response.object.XMX}" != "6144M"):
        setXmx:
          Xmx: 6144M
          nodeGroup: proc
    - elif ("${nodes.proc.first.flexibleCloudlets}" == "60") && ("${response.object.XMX}" != "4915M"):
        setXmx:
          Xmx: 4915M
          nodeGroup: proc
    - elif ("${nodes.proc.first.flexibleCloudlets}" == "40") && ("${response.object.XMX}" != "3072M"):
        setXmx:
          Xmx: 3072M
          nodeGroup: proc

    - api: env.control.GetContainerEnvVarsByGroup
      nodeGroup: cp
    - if ("${nodes.cp.first.flexibleCloudlets}" == "80") && ("${response.object.XMX}" != "6144M"):
        setXmx:
          Xmx: 6144M
          nodeGroup: cp
    - elif ("${nodes.cp.first.flexibleCloudlets}" == "60") && ("${response.object.XMX}" != "4915M"):
        setXmx:
          Xmx: 4915M
          nodeGroup: cp
    - elif ("${nodes.cp.first.flexibleCloudlets}" == "40") && ("${response.object.XMX}" != "3072M"):
        setXmx:
          Xmx: 3072M
          nodeGroup: cp

  setXmx:
    - api: env.control.AddContainerEnvVars
      nodeGroup: ${this.nodeGroup}
      vars: {"XMX": "${this.Xmx}"}
    - setGlobals:
        jahiaRollingRestartNeeded: true

settings:
  fields:
    - type: toggle
      name: disable_checks
      caption: disable all checks
