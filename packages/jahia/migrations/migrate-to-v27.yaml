---
type: update
version: 1.5.2
name: Migrate Jahia env to v27
id: migrate-jahia-env-v27

# Required for healthchecks
mixins:
  - "../../../mixins/common.yml"
  - "../../../mixins/jahia.yml"
  - "../../../mixins/mariadb.yml"
  - "../../../mixins/haproxy.yml"
  - "../../../mixins/elasticsearch.yml"

globals:
  version: 27
  haproxy_version: 2.7.8

onInstall:
  ### Pre-migration actions
  - checkEnvVersion: ${globals.version}
  - if(!${settings.disable_checks}):
      - preChecks
  - else:
      log: "pre migration checks are disabled"
  - eventsUpdate
  - setGlobalRepoRootUrl
  ### End pre-migration actions

  # Actions that update modules (need to be done first)

  - installPotrace                            # PAAS-2399

  # Actions that require a restart

  # Actions that require a redeploy
  - upgradeHaproxy                            # PAAS-2360

  # Redeploy and restart actions:
  - if ("${globals.jahiaRollingRedeployNeeded}" == "true"):
      - install:
          jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-redeploy.yml"
  - else:
      - if ("${globals.jahiaRollingRestartNeeded}" == "true"):
          - install:
              jps: "${globals.repoRootUrl}/packages/jahia/jahia-rolling-restart.yml"

  ### Post-migration actions
  - setEnvVersion: ${globals.version}
  - if(!${settings.disable_checks}):
      - postChecks
  - else:
      log: "post migration checks are disabled"
  - logEvent:
      target: ${nodes.proc.first.id}
      title: "Environment $envName migrated"
      text: "Environment $envName migrated to v${globals.version}"
  ### End post-migration actions

actions:
  eventsUpdate:
    install:
      jps: "${baseUrl}../update-events.yml"

  preChecks:
    - checkJahiaHealth: "cp, proc"
    - checkJahiaDatadogCustomChecks: "cp, proc"
    - checkHaproxyHealth: bl
    - checkHaproxyDatadogCustomChecks: bl
    - checkMariadbHealth:
        target: sqldb
    - checkGaleraClusterHealth: sqldb
    - checkMariadbDatadogCustomChecks: sqldb

  postChecks:
    - checkJahiaHealth: "cp, proc"
    - checkJahiaDatadogCustomChecks: "cp, proc"
    - checkHaproxyHealth: bl
    - checkHaproxyDatadogCustomChecks: bl
    - checkMariadbHealth:
        target: sqldb
    - checkGaleraClusterHealth: sqldb
    - checkMariadbDatadogCustomChecks: sqldb

  installPotrace:
    - cmd[cp, proc]: |-
        if ! rpm -q potrace; then
          yum install potrace -y
        fi

  upgradeHaproxy:
    - foreach (nodes.bl):
      - cmd [${@i.id}]: |-
          HAPROXY_SERVICE_OVERRIDE=/etc/systemd/system/haproxy.service.d/override.conf
          FILE=/etc/jelastic/redeploy.conf
          if ! grep -q $HAPROXY_SERVICE_OVERRIDE $FILE; then
            echo $HAPROXY_SERVICE_OVERRIDE >> $FILE
          fi
          service haproxy stop
      - if ("${nodes.bl.first.version}" != "${globals.haproxy_version}"):
        - api: environment.control.RedeployContainerById
          nodeId: ${@i.id}
          tag: ${globals.haproxy_version}
          useExistingVolumes: true
          skipReinstall: false
          envName: ${env.envName}
      - cmd [${@i.id}]: systemctl restart haproxy
    - environment.nodegroup.ApplyData [bl]:
      data:
        productName: haproxy
        productVersion: ${globals.haproxy_version}

settings:
  fields:
    - type: toggle
      name: disable_checks
      caption: disable all checks
