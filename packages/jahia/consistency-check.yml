---
type: update
version: 1.5.2
name: Jahia - Consistency check
id: jahia-consistency-check
description:
  short: Checks the consistency of a Jahia environment

mixins:
  - ../../mixins/common.yml
  - ../../mixins/jahia.yml

globals:
  errors: "[]"

onInstall:
  - checkModulesConsistency
  - if( "${globals.errors}" != "[]" ):
      - return:
          type: error
          message: ${globals.errors}

actions:
  checkModulesConsistency:
    # Check if running and validate version:
    - checkPAT
    - checkSAM
    - checkGraphQL
    - checkJahiaDashboard
    # Check if running only:
    - checkDistributedSessions
    - checkJExperience
    - checkAugSearch
    # Security fixes:
    - checkMacros
    - checkWebflowFilter

  addError:
    # Parameters:
    # - message: error message
    script: |-
      let errorsJson = JSON.parse(`${globals.errors}`)
      errorsJson.push("${this.message}")
      resp = {"result": 0}
      resp.onAfterReturn = {
        setGlobals: {
          errors: JSON.stringify(errorsJson)
        }
      }
      return resp

  basicModuleCheck:
    # Parameters:
    # - moduleSymname: the symbolic name of the module to upgrade (for instance "distributed-sessions")
    - checkModule:
        moduleSymname: ${this.moduleSymname}
    - if( "${globals.moduleState}" != "started" ):
        - addError:
            message: "${this.moduleSymname} isn't started"
    - if( ${globals.installedVersionsCount} > 1 ):
        - addError:
            message: "Multiple versions of ${this.moduleSymname} are installed"

  checkPAT:
    # Jahia 8.0 ==> 1.0.1
    # Jahia between 8.1.1.0 and 8.1.2.2 ==> 1.2.0
    - basicModuleCheck:
        moduleSymname: personal-api-tokens
    - if( "${globals.moduleState}" == "started" ):
        - getJahiaVersion
        - set:
            expectedVersion: ""
        - isVersionStrictlyLower:
            a: ${globals.jahiaVersion}
            b: 8.1.0.0
            res: isJahia80
        - if( ${globals.isJahia80} ):
            - set:
                expectedVersion: 1.0.1
        - else:
            - isVersionBetween:
                lower: 8.1.1.0
                lower_may_equal: true
                version: ${globals.jahiaVersion}
                higher: 8.1.2.2
                higher_may_equal: true
                res: isBetween8110and8122
            - if( ${globals.isBetween8110and8122} ):
                - set:
                    expectedVersion: 1.2.0
        - if( "${this.expectedVersion}" != "" && "${globals.runningVersion}" != "${this.expectedVersion}" ):
            - addError:
                message: "Running personal-api-tokens version is ${globals.runningVersion} instead of ${this.expectedVersion}"

  checkSAM:
    # Jahia < 8.2 ==> 2.7.0 (the module is directly embedded in Jahia starting from 8.2)
    - basicModuleCheck:
        moduleSymname: server-availability-manager
    - if( "${globals.moduleState}" == "started" ):
        - getJahiaVersion
        - isVersionStrictlyLower:
            a: ${globals.jahiaVersion}
            b: 8.2.0.0
            res: isLowerThan8200
        - if( ${globals.isLowerThan8200} ):
            - set:
                expectedVersion: 2.7.0
            - if( "${globals.runningVersion}" != "${this.expectedVersion}" ):
                - addError:
                    message: "Running server-availability-manager version is ${globals.runningVersion} instead of ${this.expectedVersion}"

  checkDistributedSessions:
    - basicModuleCheck:
        moduleSymname: distributed-sessions

  checkGraphQL:
    # Jahia 8.0.3 ==> 2.6.0 (or above)
    # Jahia [8.1.1.0;8.1.3.0] ==> 2.18.0 (or above)
    - basicModuleCheck:
        moduleSymname: graphql-dxm-provider
    - if( "${globals.moduleState}" == "started" ):
        - getJahiaVersion
        - set:
              expectedVersion: ""
        - if( "${globals.jahiaVersion}" == "8.0.3.0" ):
            - set:
                  expectedVersion: 2.6.0
        - else:
            - isVersionBetween:
                lower: 8.1.1.0
                lower_may_equal: true
                version: ${globals.jahiaVersion}
                higher: 8.1.3.0
                higher_may_equal: true
                res: isBetween8110and8130
            - if( ${globals.isBetween8110and8130} ):
                - set:
                    expectedVersion: 2.18.0
        # Ugly workaround because ${fn.compare([globals.runningVersion], [this.expectedVersion])} doesn't work
        # see https://paas-support.virtuozzo.com/hc/en-us/requests/400488
        - set:
            versionsCheck: ${globals.runningVersion}, ${this.expectedVersion}
        - if( "${this.expectedVersion}" != "" && ${fn.compare([this.versionsCheck])} < 0 ):
            - addError:
                message: "Running graphql-dxm-provider version is ${globals.runningVersion}, which is lower than expected ${this.expectedVersion}"

  checkJExperience:
    - getEnvLinkedJcustomer:
        envName: ${env.envName}
    - if( ${globals.unomi_env_linked} ):
        - basicModuleCheck:
            moduleSymname: jexperience
        - basicModuleCheck:
            moduleSymname: jexperience-dashboards
        - basicModuleCheck:
            moduleSymname: kibana-dashboards-provider

  checkAugSearch:
    - isAugSearchEnabled
    - if( ${globals.isAugSearchEnabled} ):
        - basicModuleCheck:
            moduleSymname: database-connector
        - basicModuleCheck:
            moduleSymname: elasticsearch-connector
        - basicModuleCheck:
            moduleSymname: augmented-search

  checkMacros:
    # Jahia 8 < 8.1.1 ==> 8.2.0
    - basicModuleCheck:
        moduleSymname: macros
    - if( "${globals.moduleState}" == "started" ):
        - getJahiaVersion
        - isVersionBetween:
            lower: 8.0.0.0
            lower_may_equal: true
            version: ${globals.jahiaVersion}
            higher: 8.1.1.0
            higher_may_equal: false
            res: isJahia8Below811
        - if( ${globals.isJahia8Below811} ):
            - if( ${fn.compare([globals.runningVersion], 8.2.0)} < 0 ):
                - addError:
                    message: "Running macros version is ${globals.runningVersion}, which is lower than expected 8.2.0"

  checkWebflowFilter:
    # Jahia 8.0 ==> 2.2.0
    # Jahia 8.1 ==> not installed (not needed)
    - getJahiaVersion
    - isVersionStrictlyLower:
        a: ${globals.jahiaVersion}
        b: 8.1.0.0
        res: isLowerThan8100
    - if( ${globals.isLowerThan8100} ):
        - basicModuleCheck:
            moduleSymname: webflow-filter
        - if( "${globals.moduleState}" == "started" ):
            - set:
                expectedVersion: 2.2.0
        - if( ${fn.compare([globals.runningVersion], [this.expectedVersion])} < 0 ):
            - addError:
                message: "Running webflow-filter version is ${globals.runningVersion}, which is lower than expected ${this.expectedVersion}"

  checkJahiaDashboard:
    # Jahia 8.1.1.0 <= 8.1.2.2 ==> 1.6.0
    - if( "${globals.moduleState}" == "started" ):
        - getJahiaVersion
        - isVersionBetween:
            lower: 8.1.1.0
            lower_may_equal: true
            version: ${globals.jahiaVersion}
            higher: 8.1.2.2
            higher_may_equal: true
            res: isBetween8110and8122
        - if( ${globals.isBetween8110and8122} ):
            - basicModuleCheck:
                moduleSymname: jahia-dashboard
            - if( ${fn.compare([globals.runningVersion], 1.6.0)} < 0 ):
                - addError:
                    message: "Running jahia-dashboard version is ${globals.runningVersion}, which is lower than expected 1.6.0"
