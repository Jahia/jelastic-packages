---
type: update
version: 1.5.2
name: Jahia - Consistency check
id: jahia-consistency-check
description:
  short: Checks the consistency of a Jahia environment

mixins:
  - ../../mixins/common.yml
  - ../../mixins/jahia.yml

globals:
  errors: "[]"

onInstall:
  - checkModulesConsistency
  - if( "${globals.errors}" != "[]" ):
      - return:
          type: error
          message: ${globals.errors}

actions:
  checkModulesConsistency:
    # Modules we need for our features:
    - checkPAT
    - checkSAM
    - checkGraphQL
    - checkDistributedSessions
    - checkJExperience
    - checkAugSearch
    - checkJahiaDashboard
    # Security fixes:
    - checkMacros
    - checkWebflowFilter

  addError:
    # Parameters:
    # - message: error message
    script: |-
      let errorsJson = JSON.parse(`${globals.errors}`)
      errorsJson.push("${this.message}")
      resp = {"result": 0}
      resp.onAfterReturn = {
        setGlobals: {
          errors: JSON.stringify(errorsJson)
        }
      }
      return resp

  basicModuleCheck:
    # Parameters:
    # - moduleSymname: the symbolic name of the module to upgrade (for instance "distributed-sessions")
    - checkModule:
        moduleSymname: ${this.moduleSymname}
    - if( "${globals.moduleState}" != "started" ):
        - addError:
            message: "${this.moduleSymname} isn't started"
    - if( ${globals.installedVersionsCount} > 1 ):
        - addError:
            message: "Multiple versions of ${this.moduleSymname} are installed"

  checkDistributedSessions:
    # Jahia 7.3 ==> 2.1.2
    # Jahia 8.0 ==> 3.1.1
    # Jahia 8.1+ ==> 3.4.0
    - basicModuleCheck:
        moduleSymname: distributed-sessions
    - if( "${globals.moduleState}" == "started" ):
        - getJahiaVersion
        - isVersionStrictlyLower:
            a: ${globals.jahiaVersion}
            b: 8.0.0.0
            res: isLowerThan8000
        - if( ${globals.isLowerThan8000} ):
            - set:
                expectedVersion: 2.1.2
        - else:
            - isVersionStrictlyLower:
                a: ${globals.jahiaVersion}
                b: 8.1.0.0
                res: isLowerThan8100
            - if( ${globals.isLowerThan8100} ):
                - set:
                    expectedVersion: 3.1.1
            - else:
                - set:
                    expectedVersion: 3.4.0
        - if( "${globals.runningVersion}" != "${this.expectedVersion}" ):
            - addError:
                message: "Running distributed-sessions version is ${globals.runningVersion} instead of ${this.expectedVersion}"

  checkPAT:
    # Jahia 7.3 ==> 0.5.0
    # Jahia 8.0 ==> 1.0.1
    # Jahia between 8.1.1.0 and 8.1.2.2 ==> 1.2.0
    - basicModuleCheck:
        moduleSymname: personal-api-tokens
    - if( "${globals.moduleState}" == "started" ):
        - getJahiaVersion
        - set:
            expectedVersion: ""
        - isVersionStrictlyLower:
            a: ${globals.jahiaVersion}
            b: 8.0.0.0
            res: isJahia7
        - if( ${globals.isJahia7} ):
            - set:
                expectedVersion: 0.5.0
        - else:
            - isVersionStrictlyLower:
                a: ${globals.jahiaVersion}
                b: 8.1.0.0
                res: isJahia80
            - if( ${globals.isJahia80} ):
                - set:
                    expectedVersion: 1.0.1
            - else:
                - isVersionBetween:
                    lower: 8.1.1.0
                    lower_may_equal: true
                    version: ${globals.jahiaVersion}
                    higher: 8.1.2.2
                    higher_may_equal: true
                    res: isBetween8110and8122
                - if( ${globals.isBetween8110and8122} ):
                    - set:
                        expectedVersion: 1.2.0
        - if( "${this.expectedVersion}" != "" && "${globals.runningVersion}" != "${this.expectedVersion}" ):
            - addError:
                message: "Running personal-api-tokens version is ${globals.runningVersion} instead of ${this.expectedVersion}"

  checkSAM:
    # Jahia 7.3 < 7.3.9 ==> 1.0.1
    # Jahia 7.3 >= 7.3.9 ==> 1.2.0
    # Jahia 8.0 ==> 2.0.1
    # Jahia 8.1 < 8.1.2 ==> 2.1.0
    # Jahia 8.1.2+ ==> 2.3.0
    - basicModuleCheck:
        moduleSymname: server-availability-manager
    - if( "${globals.moduleState}" == "started" ):
        - getJahiaVersion
        - isVersionStrictlyLower:
            a: ${globals.jahiaVersion}
            b: 7.3.9.0
            res: isLowerThan7390
        - if( ${globals.isLowerThan7390} ):
            - set:
                expectedVersion: 1.0.1
        - else:
            - isVersionStrictlyLower:
                a: ${globals.jahiaVersion}
                b: 8.0.0.0
                res: isLowerThan8000
            - if( ${globals.isLowerThan8000} ):
                - set:
                    expectedVersion: 1.2.0
            - else:
                - isVersionStrictlyLower:
                    a: ${globals.jahiaVersion}
                    b: 8.1.0.0
                    res: isLowerThan8100
                - if( ${globals.isLowerThan8100} ):
                    - set:
                        expectedVersion: 2.0.1
                - else:
                    - isVersionStrictlyLower:
                        a: ${globals.jahiaVersion}
                        b: 8.1.2.0
                        res: isLowerThan8120
                    - if( ${globals.isLowerThan8120} ):
                        - set:
                            expectedVersion: 2.1.0
                    - else:
                        - set:
                            expectedVersion: 2.3.0
        - if( "${globals.runningVersion}" != "${this.expectedVersion}" ):
            - addError:
                message: "Running server-availability-manager version is ${globals.runningVersion} instead of ${this.expectedVersion}"

  checkGraphQL:
    # Jahia 7.3 < 7.3.9 ==> 1.10.0
    # Jahia 8.0.3 ==> 2.6.0
    - basicModuleCheck:
        moduleSymname: graphql-dxm-provider
    - if( "${globals.moduleState}" == "started" ):
        - getJahiaVersion
        - isVersionStrictlyLower:
            a: ${globals.jahiaVersion}
            b: 7.3.9.0
            res: isLowerThan739
        - if( ${globals.isLowerThan739} && "${globals.runningVersion}" != "1.10.0" ):
            - addError:
                message: "Running graphql-dxm-provider version is ${globals.runningVersion} instead of 1.10.0"
        - else:
            - if( "${globals.jahiaVersion}" == "8.0.3" && "${globals.runningVersion}" != "2.6.0" ):
                - addError:
                    message: "Running graphql-dxm-provider version is ${globals.runningVersion} instead of 2.6.0"

  checkJExperience:
    # Jahia 7.3.x ==> jExperience 1.11.9
    # Jahia 8.0.x ==> jExperience 2.2.0
    # Jahia 8.1.x ==> jExperience 2.2.2
    - getEnvLinkedJcustomer:
        envName: ${env.envName}
    - if( ${globals.unomi_env_linked} ):
        - basicModuleCheck:
            moduleSymname: jexperience
        - if( "${globals.moduleState}" == "started" ):
            - getJahiaVersion
            - isVersionStrictlyLower:
                a: ${globals.jahiaVersion}
                b: 8.0.0.0
                res: isLowerThan8000
            - if( ${globals.isLowerThan8000} ):
                - set:
                    expectedVersion: 1.11.9
            - else:
                - isVersionStrictlyLower:
                    a: ${globals.jahiaVersion}
                    b: 8.1.0.0
                    res: isLowerThan8100
                - if( ${globals.isLowerThan8100} ):
                    - set:
                        expectedVersion: 2.2.0
                - else:
                    - set:
                        expectedVersion: 2.2.2
            - if( "${globals.runningVersion}" != "${this.expectedVersion}" ):
                - addError:
                    message: "Running jexperience version is ${globals.runningVersion} instead of ${this.expectedVersion}"

  checkAugSearch:
    # Jahia 7.x ==> Database connector 1.2.0 / Elastcsearch connector 2.1.0 / Augmented Search 1.6.2
    # Jahia 8.x ==> Database connector 1.5.0 / Elastcsearch connector 3.2.0 / Augmented Search 3.3.3
    - isAugSearchEnabled
    - if( ${globals.isAugSearchEnabled} ):
        - getJahiaVersion
        - isVersionStrictlyLower:
            a: ${globals.jahiaVersion}
            b: 8.0.0.0
            res: isLowerThan8000
        - if( ${globals.isLowerThan8000} ):
            - set:
                expectedDbConnectorVersion: 1.2.0
                expectedEsConnectorVersion: 2.1.0
                expectedASVersion: 1.6.2
        - else:
            - set:
                expectedDbConnectorVersion: 1.5.0
                expectedEsConnectorVersion: 3.2.0
                expectedASVersion: 3.3.3
        - basicModuleCheck:
            moduleSymname: database-connector
        - if( "${globals.moduleState}" == "started" && "${globals.runningVersion}" != "${this.expectedDbConnectorVersion}" ):
            - addError:
                message: "Running database-connector version is ${globals.runningVersion} instead of ${this.expectedDbConnectorVersion}"
        - basicModuleCheck:
            moduleSymname: elasticsearch-connector
        - if( "${globals.moduleState}" == "started" && "${globals.runningVersion}" != "${this.expectedEsConnectorVersion}" ):
            - addError:
                message: "Running elasticsearch-connector version is ${globals.runningVersion} instead of ${this.expectedEsConnectorVersion}"
        - basicModuleCheck:
            moduleSymname: augmented-search
        - if( "${globals.moduleState}" == "started" && "${globals.runningVersion}" != "${this.expectedASVersion}" ):
            - addError:
                message: "Running augmented-search version is ${globals.runningVersion} instead of ${this.expectedASVersion}"

  checkMacros:
    # Jahia 7 < 7.3.10 ==> 7.1.3
    # Jahia 8 < 8.1.1 ==> 8.2.0
    - basicModuleCheck:
        moduleSymname: macros
    - if( "${globals.moduleState}" == "started" ):
        - getJahiaVersion
        - isVersionStrictlyLower:
            a: ${globals.jahiaVersion}
            b: 7.3.10.0
            res: isLowerThan73100
        - if( ${globals.isLowerThan73100} ):
            - if( ${fn.compare([globals.runningVersion], 7.1.3)} < 0 ):
                - addError:
                    message: "Running macros version is ${globals.runningVersion}, which is lower than expected 7.1.3"
        - else:
            - isVersionBetween:
                lower: 8.0.0.0
                lower_may_equal: true
                version: ${globals.jahiaVersion}
                higher: 8.1.1.0
                higher_may_equal: false
                res: isJahia8Below811
            - if( ${globals.isJahia8Below811} ):
                - if( ${fn.compare([globals.runningVersion], 8.2.0)} < 0 ):
                    - addError:
                        message: "Running macros version is ${globals.runningVersion}, which is lower than expected 8.2.0"

  checkWebflowFilter:
    # Jahia 7.3 ==> 1.2.0
    # Jahia 8.0 ==> 2.2.0
    # Jahia 8.1 ==> not installed (not needed)
    - getJahiaVersion
    - isVersionStrictlyLower:
        a: ${globals.jahiaVersion}
        b: 8.1.0.0
        res: isLowerThan8100
    - if( ${globals.isLowerThan8100} ):
        - basicModuleCheck:
            moduleSymname: webflow-filter
        - if( "${globals.moduleState}" == "started" ):
            - isVersionStrictlyLower:
                a: ${globals.jahiaVersion}
                b: 8.0.0.0
                res: isLowerThan8000
            - if( ${globals.isLowerThan8000} ):
                - set:
                    expectedVersion: 1.2.0
            - else:
                - set:
                    expectedVersion: 2.2.0
            - if( ${fn.compare([globals.runningVersion], [this.expectedVersion])} < 0 ):
                - addError:
                    message: "Running webflow-filter version is ${globals.runningVersion}, which is lower than expected ${this.expectedVersion}"

  checkJahiaDashboard:
    # Jahia 8.1.1.0 <= 8.1.2.2 ==> 1.6.0
    - if( "${globals.moduleState}" == "started" ):
        - getJahiaVersion
        - isVersionBetween:
            lower: 8.1.1.0
            lower_may_equal: true
            version: ${globals.jahiaVersion}
            higher: 8.1.2.2
            higher_may_equal: true
            res: isBetween8110and8122
        - if( ${globals.isBetween8110and8122} ):
            - basicModuleCheck:
                moduleSymname: jahia-dashboard
            - if( ${fn.compare([globals.runningVersion], 1.6.0)} < 0 ):
                - addError:
                    message: "Running jahia-dashboard version is ${globals.runningVersion}, which is lower than expected 1.6.0"
