---
type: update
version: 1.5.2
name: Jahia - Consistency check
id: jahia-consistency-check
description:
  short: Checks the consistency of a Jahia environment

mixins:
  - ../../mixins/common.yml
  - ../../mixins/jahia.yml

globals:
  errors: "[]"

onInstall:
  - checkModulesConsistency
  - if( "${globals.errors}" != "[]" ):
      - return:
          type: error
          message: ${globals.errors}

actions:
  checkModulesConsistency:
    - checkPAT
    - checkSAM
    - checkGraphQL
    - checkDistributedSessions
    - checkJExperience
    - checkAugSearch

  addError:
    # Parameters:
    # - message: error message
    script: |-
      let errorsJson = JSON.parse(`${globals.errors}`)
      errorsJson.push("${this.message}")
      resp = {"result": 0}
      resp.onAfterReturn = {
        setGlobals: {
          errors: JSON.stringify(errorsJson)
        }
      }
      return resp

  basicModuleCheck:
    # Parameters:
    # - moduleSymname: the symbolic name of the module to upgrade (for instance "distributed-sessions")
    - checkModule:
        moduleSymname: ${this.moduleSymname}
    - if( "${globals.moduleState}" != "started" ):
        - addError:
            message: "${this.moduleSymname} isn't started"
    - if( ${globals.installedVersionsCount} > 1 ):
        - addError:
            message: "Multiple versions of ${this.moduleSymname} are installed"

  checkPAT:
    - basicModuleCheck:
        moduleSymname: personal-api-tokens

  checkSAM:
    - basicModuleCheck:
        moduleSymname: server-availability-manager

  checkDistributedSessions:
    - basicModuleCheck:
        moduleSymname: distributed-sessions

  checkGraphQL:
    - basicModuleCheck:
        moduleSymname: graphql-dxm-provider

  checkJExperience:
    - getEnvLinkedJcustomer:
        envName: ${env.envName}
    - if( ${globals.unomi_env_linked} ):
        - basicModuleCheck:
            moduleSymname: jexperience
        - basicModuleCheck:
            moduleSymname: jexperience-dashboards
        - basicModuleCheck:
            moduleSymname: kibana-dashboards-provider

  checkAugSearch:
    - isAugSearchEnabled
    - if( ${globals.isAugSearchEnabled} ):
        - basicModuleCheck:
            moduleSymname: database-connector
        - basicModuleCheck:
            moduleSymname: elasticsearch-connector
        - basicModuleCheck:
            moduleSymname: augmented-search
