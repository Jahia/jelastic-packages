---
type: update
version: 1.5.2
name: Jahia - Update jExperience config
logo: ../../assets/common/jahia-logo-70x70.png
id: jahia-unomi-update-dx
description:
  short: Jahia - Update jExperience config


mixins:
  - ../../mixins/common.yml
  - ../../mixins/jahia.yml
  - ../../mixins/jcustomer.yml


onInstall:
  - setNGData
  - environment.control.ApplyNodeGroupData[proc, cp]:
      data:
        envLink: ${settings.unomienv}
  - getUnomiDnsAndPwd:
      unomi_env_name: ${settings.unomienv}
  - getJexperienceVersion
  - refreshUnomiAllowedIPs:
      unomiEnvName: ${settings.unomienv}
  - upgradeJahiaModule:
      module: jExperience
      version: ${globals.jexperience_version}
  - getJcustomerKey:
      jcustomerEnv: ${settings.unomienv}
  - confJexperience: proc
  - confJexperience: cp


actions:
  setNGData:
    - script: |
        var resp = jelastic.env.control.GetNodeGroups('${settings.unomienv}', session);
        for (var i = 0, g = resp.object; i < g.length; i++) {
          if (g[i].name == 'cp' && g[i].hasOwnProperty('envLink')) {
            var actual_envLink = g[i].envLink;
            if (actual_envLink.indexOf('${env.shortdomain}') >= 0) {
              envLinkToSet = actual_envLink;
            } else {
                envLinkToSet = actual_envLink + ',' + '${env.shortdomain}';
              };
          } else {
              envLinkToSet = '${env.shortdomain}';
            };
        };
        return {'result': 0, 'envLinkToSet': envLinkToSet, 'response': resp};
    - set:
        envLinkToSet: ${response.envLinkToSet}
    - log: "## this DX appid will now be set to cp node(s) in the Unomi env: ${this.envLinkToSet}"
    - script: |
        var resp = jelastic.env.control.ApplyNodeGroupData('${settings.unomienv}', session,
          nodeGroup='cp',
          data={'envLink': '${this.envLinkToSet}'}
        );
        if (resp.result != 0) return resp;
        var new_prop = jelastic.env.control.GetNodeGroups('${settings.unomienv}', session);
          return {'result': new_prop.result, 'new_prop': new_prop};

  getJexperienceVersion:
    # Get jExperience version to install according to Jahia env version:
    # - Jahia 7.3.x ==> jExperience 1.11.6
    # - Jahia 8.0.2+ ==> jExperience 2.2.0
    - getJahiaVersion
    - isVersionStrictlyLower:
        a: ${globals.jahiaVersion}
        b: 8.0.0.0
        res: isLowerThan8000
    - if( ${globals.isLowerThan8000} ):
        - setGlobals:
            jexperience_version: 1.11.6
    - else:
        - setGlobals:
            jexperience_version: 2.2.0

  confJexperience:
    - setGlobalRepoRootUrl
    - cmd[${this}]: |-
        CONF_FILENAME=org.jahia.modules.jexperience.settings-global.cfg
        CONF_PATH="/data/digital-factory-data/karaf/etc/$CONF_FILENAME"
        CONF_ASSET_URL=${globals.repoRootUrl}/assets/jahia/$CONF_FILENAME
        # Check if asset URL is correct
        if (! curl -fIs "$CONF_ASSET_URL" > /dev/null); then
          >&2 echo "Asset not found"
          exit 1
        fi
        # Set up jExperience configuration
        jcustomer_key=${globals.jcustomerKey}
        # The last sed is required to escape backslashes (with a backslash) inside the cfg file
        curl -fLSs "$CONF_ASSET_URL" \
        | sed -r -e 's;(\w+URL\s*=\s*).*;\1http://${globals.unomidns};' \
                   -e "s;[ #]*(\w+\.jCustomerKey\s*=\s*).*;\1${jcustomer_key};" \
                   -e "s;(\w+Password\s*=\s*).*;\1$(echo -n ${globals.unomi_pwd_b64} | base64 -d | sed 's;\\;\\\\;g');" \
        | sed 's;\\;\\\\;g' \
                > $CONF_PATH
        chown tomcat:tomcat "$CONF_PATH"
    - if ("${response.errOut}" != ""):
        - return:
            type: error
            message: "An error occurred during jexperience installation."

settings:
  fields:
    - name: unomienv
      type: envlist
      caption: Targeted Unomi env
      required: true
      valueField: shortdomain
