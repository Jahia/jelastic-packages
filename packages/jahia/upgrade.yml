---
type: update
version: 1.5.2
name: Jahia - Upgrade
logo: ../../assets/common/jahia-logo-70x70.png
id: jahia-upgrade
description:
  short: Jahia - Upgrade

mixins:
  - ../../mixins/common.yml
  - ../../mixins/jahia.yml
  - ../../mixins/haproxy.yml

onInstall:
  - setGlobalRepoRootUrl
  - getJahiaVersion
  - setGlobals:
      initialVersion: ${globals.jahiaVersion}
  # Check if target version is consistent (higher than current version)
  - isVersionStrictlyHigher:
      a: "${settings.targetVersion}"
      b: "${globals.initialVersion}"
      res: targetVersionIsConsistent
  - if (!${globals.targetVersionIsConsistent}):
      - return:
          type: error
          message: "Target version must be higher than current version."

  # Dump modules state
  - dumpModules:
      operation: upgrade
      checkVersion: false

  # Mute monitors
  - muteDatadogSynthetics:
      duration: 240 # 4h
  - muteEnvWideMonitors

  # Check if jExperience is running
  - checkModule:
      moduleSymname: jexperience
  - setGlobals:
      jexperienceStatus: ${globals.moduleState}

  # If a Docker tag suffix was passed we need to append it to the Jahia version
  - if ('${settings.dockerTagSuffix.print()}' == ''):
      - set:
          targetDockerTag: ${settings.targetVersion}
  - else:
      - set:
          targetDockerTag: ${settings.targetVersion}_${settings.dockerTagSuffix}

  # Remove tomcat filtering if enabled
  - api: env.control.GetContainerEnvVarsByGroup
    nodeGroup: proc
  - if ("${response.object.tomcat_cfg_cloud_filtering}" == "true"):
      - setGlobals:
          tomcatFiltering: true
  - if(globals.tomcatFiltering):
      - install:
          jps: "${globals.repoRootUrl}/packages/jahia/disable-tomcat-filtering.yaml"
          settings:
            skipRestart: true

  # Upgrade Jahia nodes (all Jahia nodes must be stopped first)
  - cmd [cp, proc]:
      - service tomcat stop
  - procRedeploy:
      upgradeJahia: true
      targetDockerTag: ${this.targetDockerTag}
  - browsingNodesBulkRedeploy:
      targetDockerTag: ${this.targetDockerTag}

  # Update jExperience if needed
  - if ("${globals.jexperienceStatus}" == "started"):
    - getEnvLinkedJcustomer:
        envName: ${env.envName}
    - getJexperienceVersion:
        unomi_env_name: ${globals.unomi_env_name}
    - installOrUpgradeModules:
        modules: jexperience/${globals.jexperienceVersion}

  # Update Jahia version in node group data, envvar, and PAPI:
  - env.nodegroup.ApplyData[cp, proc]:
      data:
        productVersion: ${settings.targetVersion}
  - env.control.AddContainerEnvVars[cp, proc]:
      vars: {"DX_VERSION": "${settings.targetVersion}"}
  - updateProductVersionInPapi:
      version: "${settings.targetVersion}"
      product: "dx"

  # Check modules state
  - checkModulesAfterOperation:
      operation: upgrade
      checkVersion: false

  # Update dx-clustering if needed
  - upgradeDxClusteringTo8109

  # Re-enable tomcat filtering if needed
  - if(globals.tomcatFiltering):
      - install:
          jps: "${globals.repoRootUrl}/packages/jahia/enable-tomcat-filtering.yaml"

  # Unmute monitors
  - unmuteEnvWideMonitors
  - unmuteDatadogSynthetics

settings:
  fields:
    - name: targetVersion
      type: string
      caption: DX Target Version
      vtype: text
      required: true
    - name: dockerTagSuffix
      type: string
      caption: Docker tag suffix
      required: false
      tooltip: Optional. If you set this parameter to "suffix", the tag used will be "{targetVersion}_suffix".
