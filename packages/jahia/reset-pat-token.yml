---
type: update
version: 1.5.2
id: jahia-reset-pat-token
name: Jahia reset PAT token
description:
    Re-creates the "Jahia Cloud Token" PAT token on all Jahia nodes using the token stored in Vault.
    BE VERY CAREFUL when using the package, as this will overwrite the token and may bring down the env in the worst case.

mixins:
  - ../../mixins/common.yml
  - ../../mixins/jahia.yml

onInstall:
  - getPatTokenAndKey
  - cmd [proc]: |-
      __secret__pat_token="${globals.__secret__pat_token}"
      groovy_file_path=/data/digital-factory-data/patches/groovy/pat.groovy

      # Clean up any possible remainder of previous script execution
      rm -f ${groovy_file_path}*

      # Replace Pat Token if needed and start tomcat
      jahia_major_version=$(echo "$DX_VERSION" | cut -d'.' -f1)
      if [ $jahia_major_version -eq 7 ]; then
        jahia_7_parameter=", null"
      else
        jahia_7_parameter=""
      fi

      echo """
        org.jahia.services.content.JCRTemplate.getInstance().doExecuteWithSystemSession({ session ->
          def service = org.jahia.osgi.BundleUtils.getOsgiService(\"org.jahia.modules.apitokens.TokenService\"$jahia_7_parameter);
          def tokenExists = service.verifyToken(\"$__secret__pat_token\", session);
          def tokenDetails = service.getTokenDetails(\"/users/root\", \"Jahia Cloud Token\", session);
          service.deleteToken(tokenDetails.key, session);
          service.tokenBuilder(\"/users/root\", \"Jahia Cloud Token\", session)
            .setToken(\"$__secret__pat_token\")
            .setActive(true)
            .create();
          session.save();
        })
      """ > ${groovy_file_path}
  - checkPatGroovyScriptExecution
